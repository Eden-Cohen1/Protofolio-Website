{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/table-v2/src/composables/use-auto-resize.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\n\nconst useAutoResize = (props) => {\n  const sizer = ref();\n  const width$ = ref(0);\n  const height$ = ref(0);\n  let resizerStopper;\n  onMounted(() => {\n    resizerStopper = useResizeObserver(sizer, ([entry]) => {\n      const { width, height } = entry.contentRect;\n      const { paddingLeft, paddingRight, paddingTop, paddingBottom } = getComputedStyle(entry.target);\n      const left = Number.parseInt(paddingLeft) || 0;\n      const right = Number.parseInt(paddingRight) || 0;\n      const top = Number.parseInt(paddingTop) || 0;\n      const bottom = Number.parseInt(paddingBottom) || 0;\n      width$.value = width - left - right;\n      height$.value = height - top - bottom;\n    }).stop;\n  });\n  onBeforeUnmount(() => {\n    resizerStopper == null ? void 0 : resizerStopper();\n  });\n  watch([width$, height$], ([width, height]) => {\n    var _a;\n    (_a = props.onResize) == null ? void 0 : _a.call(props, {\n      width,\n      height\n    });\n  });\n  return {\n    sizer,\n    width: width$,\n    height: height$\n  };\n};\n\nexport { useAutoResize };\n//# sourceMappingURL=use-auto-resize.mjs.map\n",
      "start": 1700494475936,
      "end": 1700494476061,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494476062,
      "end": 1700494476062,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\n\nconst useAutoResize = (props) => {\n  const sizer = ref();\n  const width$ = ref(0);\n  const height$ = ref(0);\n  let resizerStopper;\n   /*#__PURE__*/ false && onMounted(() => {\n    resizerStopper = useResizeObserver(sizer, ([entry]) => {\n      const { width, height } = entry.contentRect;\n      const { paddingLeft, paddingRight, paddingTop, paddingBottom } = getComputedStyle(entry.target);\n      const left = Number.parseInt(paddingLeft) || 0;\n      const right = Number.parseInt(paddingRight) || 0;\n      const top = Number.parseInt(paddingTop) || 0;\n      const bottom = Number.parseInt(paddingBottom) || 0;\n      width$.value = width - left - right;\n      height$.value = height - top - bottom;\n    }).stop;\n  });\n   /*#__PURE__*/ false && onBeforeUnmount(() => {\n    resizerStopper == null ? void 0 : resizerStopper();\n  });\n  watch([width$, height$], ([width, height]) => {\n    var _a;\n    (_a = props.onResize) == null ? void 0 : _a.call(props, {\n      width,\n      height\n    });\n  });\n  return {\n    sizer,\n    width: width$,\n    height: height$\n  };\n};\n\nexport { useAutoResize };\n//# sourceMappingURL=use-auto-resize.mjs.map\n",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingsjD;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,mCAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnltG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzyCAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494476063,
      "end": 1700494476063,
      "order": "normal"
    }
  ]
}
