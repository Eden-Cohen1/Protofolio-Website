{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/virtual-list/src/components/fixed-size-list.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import '../../../../utils/index.mjs';\nimport createList from '../builders/build-list.mjs';\nimport { isHorizontal } from '../utils.mjs';\nimport { SMART_ALIGNMENT, AUTO_ALIGNMENT, CENTERED_ALIGNMENT, END_ALIGNMENT, START_ALIGNMENT } from '../defaults.mjs';\nimport { isString } from '@vue/shared';\nimport { throwError } from '../../../../utils/error.mjs';\n\nconst FixedSizeList = createList({\n  name: \"ElFixedSizeList\",\n  getItemOffset: ({ itemSize }, index) => index * itemSize,\n  getItemSize: ({ itemSize }) => itemSize,\n  getEstimatedTotalSize: ({ total, itemSize }) => itemSize * total,\n  getOffset: ({ height, total, itemSize, layout, width }, index, alignment, scrollOffset) => {\n    const size = isHorizontal(layout) ? width : height;\n    if (process.env.NODE_ENV !== \"production\" && isString(size)) {\n      throwError(\"[ElVirtualList]\", `\n        You should set\n          width/height\n        to number when your layout is\n          horizontal/vertical\n      `);\n    }\n    const lastItemOffset = Math.max(0, total * itemSize - size);\n    const maxOffset = Math.min(lastItemOffset, index * itemSize);\n    const minOffset = Math.max(0, (index + 1) * itemSize - size);\n    if (alignment === SMART_ALIGNMENT) {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        alignment = AUTO_ALIGNMENT;\n      } else {\n        alignment = CENTERED_ALIGNMENT;\n      }\n    }\n    switch (alignment) {\n      case START_ALIGNMENT: {\n        return maxOffset;\n      }\n      case END_ALIGNMENT: {\n        return minOffset;\n      }\n      case CENTERED_ALIGNMENT: {\n        const middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0;\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset;\n        } else {\n          return middleOffset;\n        }\n      }\n      case AUTO_ALIGNMENT:\n      default: {\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n      }\n    }\n  },\n  getStartIndexForOffset: ({ total, itemSize }, offset) => Math.max(0, Math.min(total - 1, Math.floor(offset / itemSize))),\n  getStopIndexForStartIndex: ({ height, total, itemSize, layout, width }, startIndex, scrollOffset) => {\n    const offset = startIndex * itemSize;\n    const size = isHorizontal(layout) ? width : height;\n    const numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(total - 1, startIndex + numVisibleItems - 1));\n  },\n  initCache() {\n    return void 0;\n  },\n  clearCache: true,\n  validateProps() {\n  }\n});\n\nexport { FixedSizeList as default };\n//# sourceMappingURL=fixed-size-list.mjs.map\n",
      "start": 1700406280903,
      "end": 1700406280973,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406280973,
      "end": 1700406280973,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406280974,
      "end": 1700406280974,
      "order": "normal"
    }
  ]
}
