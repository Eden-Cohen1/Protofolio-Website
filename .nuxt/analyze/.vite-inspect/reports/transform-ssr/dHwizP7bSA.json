{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/config-provider/src/hooks/use-global-config.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, getCurrentInstance, inject, computed, unref, provide } from 'vue';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { configProviderContextKey } from '../constants.mjs';\nimport { useNamespace, defaultNamespace, namespaceContextKey } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale, localeContextKey } from '../../../../hooks/use-locale/index.mjs';\nimport { useZIndex, defaultInitialZIndex, zIndexContextKey } from '../../../../hooks/use-z-index/index.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\nimport { SIZE_INJECTION_KEY } from '../../../../hooks/use-size/index.mjs';\nimport { keysOf } from '../../../../utils/objects.mjs';\n\nconst globalConfig = ref();\nfunction useGlobalConfig(key, defaultValue = void 0) {\n  const config = getCurrentInstance() ? inject(configProviderContextKey, globalConfig) : globalConfig;\n  if (key) {\n    return computed(() => {\n      var _a, _b;\n      return (_b = (_a = config.value) == null ? void 0 : _a[key]) != null ? _b : defaultValue;\n    });\n  } else {\n    return config;\n  }\n}\nfunction useGlobalComponentSettings(block, sizeFallback) {\n  const config = useGlobalConfig();\n  const ns = useNamespace(block, computed(() => {\n    var _a;\n    return ((_a = config.value) == null ? void 0 : _a.namespace) || defaultNamespace;\n  }));\n  const locale = useLocale(computed(() => {\n    var _a;\n    return (_a = config.value) == null ? void 0 : _a.locale;\n  }));\n  const zIndex = useZIndex(computed(() => {\n    var _a;\n    return ((_a = config.value) == null ? void 0 : _a.zIndex) || defaultInitialZIndex;\n  }));\n  const size = computed(() => {\n    var _a;\n    return unref(sizeFallback) || ((_a = config.value) == null ? void 0 : _a.size) || \"\";\n  });\n  provideGlobalConfig(computed(() => unref(config) || {}));\n  return {\n    ns,\n    locale,\n    zIndex,\n    size\n  };\n}\nconst provideGlobalConfig = (config, app, global = false) => {\n  var _a;\n  const inSetup = !!getCurrentInstance();\n  const oldConfig = inSetup ? useGlobalConfig() : void 0;\n  const provideFn = (_a = app == null ? void 0 : app.provide) != null ? _a : inSetup ? provide : void 0;\n  if (!provideFn) {\n    debugWarn(\"provideGlobalConfig\", \"provideGlobalConfig() can only be used inside setup().\");\n    return;\n  }\n  const context = computed(() => {\n    const cfg = unref(config);\n    if (!(oldConfig == null ? void 0 : oldConfig.value))\n      return cfg;\n    return mergeConfig(oldConfig.value, cfg);\n  });\n  provideFn(configProviderContextKey, context);\n  provideFn(localeContextKey, computed(() => context.value.locale));\n  provideFn(namespaceContextKey, computed(() => context.value.namespace));\n  provideFn(zIndexContextKey, computed(() => context.value.zIndex));\n  provideFn(SIZE_INJECTION_KEY, {\n    size: computed(() => context.value.size || \"\")\n  });\n  if (global || !globalConfig.value) {\n    globalConfig.value = context.value;\n  }\n  return context;\n};\nconst mergeConfig = (a, b) => {\n  var _a;\n  const keys = [.../* @__PURE__ */ new Set([...keysOf(a), ...keysOf(b)])];\n  const obj = {};\n  for (const key of keys) {\n    obj[key] = (_a = b[key]) != null ? _a : a[key];\n  }\n  return obj;\n};\n\nexport { provideGlobalConfig, useGlobalComponentSettings, useGlobalConfig };\n//# sourceMappingURL=use-global-config.mjs.map\n",
      "start": 1700439447037,
      "end": 1700439447109,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439447109,
      "end": 1700439447109,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700439447110,
      "end": 1700439447110,
      "order": "normal"
    }
  ]
}
