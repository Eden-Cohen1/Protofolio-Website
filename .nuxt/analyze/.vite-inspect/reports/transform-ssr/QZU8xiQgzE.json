{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/table-v2/src/table-grid.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, computed, unref, defineComponent, inject, createVNode } from 'vue';\nimport '../../virtual-list/index.mjs';\nimport '../../../utils/index.mjs';\nimport './components/index.mjs';\nimport { TableV2InjectionKey } from './tokens.mjs';\nimport { tableV2GridProps } from './grid.mjs';\nimport { sum } from './utils.mjs';\nimport { isObject } from '@vue/shared';\nimport { isNumber } from '../../../utils/types.mjs';\nimport DynamicSizeGrid from '../../virtual-list/src/components/dynamic-size-grid.mjs';\nimport FixedSizeGrid from '../../virtual-list/src/components/fixed-size-grid.mjs';\nimport TableV2Header from './components/header.mjs';\n\nconst COMPONENT_NAME = \"ElTableV2Grid\";\nconst useTableGrid = (props) => {\n  const headerRef = ref();\n  const bodyRef = ref();\n  const totalHeight = computed(() => {\n    const {\n      data,\n      rowHeight,\n      estimatedRowHeight\n    } = props;\n    if (estimatedRowHeight) {\n      return;\n    }\n    return data.length * rowHeight;\n  });\n  const fixedRowHeight = computed(() => {\n    const {\n      fixedData,\n      rowHeight\n    } = props;\n    return ((fixedData == null ? void 0 : fixedData.length) || 0) * rowHeight;\n  });\n  const headerHeight = computed(() => sum(props.headerHeight));\n  const gridHeight = computed(() => {\n    const {\n      height\n    } = props;\n    return Math.max(0, height - unref(headerHeight) - unref(fixedRowHeight));\n  });\n  const hasHeader = computed(() => {\n    return unref(headerHeight) + unref(fixedRowHeight) > 0;\n  });\n  const itemKey = ({\n    data,\n    rowIndex\n  }) => data[rowIndex][props.rowKey];\n  function onItemRendered({\n    rowCacheStart,\n    rowCacheEnd,\n    rowVisibleStart,\n    rowVisibleEnd\n  }) {\n    var _a;\n    (_a = props.onRowsRendered) == null ? void 0 : _a.call(props, {\n      rowCacheStart,\n      rowCacheEnd,\n      rowVisibleStart,\n      rowVisibleEnd\n    });\n  }\n  function resetAfterRowIndex(index, forceUpdate2) {\n    var _a;\n    (_a = bodyRef.value) == null ? void 0 : _a.resetAfterRowIndex(index, forceUpdate2);\n  }\n  function scrollTo(leftOrOptions, top) {\n    const header$ = unref(headerRef);\n    const body$ = unref(bodyRef);\n    if (!header$ || !body$)\n      return;\n    if (isObject(leftOrOptions)) {\n      header$.scrollToLeft(leftOrOptions.scrollLeft);\n      body$.scrollTo(leftOrOptions);\n    } else {\n      header$.scrollToLeft(leftOrOptions);\n      body$.scrollTo({\n        scrollLeft: leftOrOptions,\n        scrollTop: top\n      });\n    }\n  }\n  function scrollToTop(scrollTop) {\n    var _a;\n    (_a = unref(bodyRef)) == null ? void 0 : _a.scrollTo({\n      scrollTop\n    });\n  }\n  function scrollToRow(row, strategy) {\n    var _a;\n    (_a = unref(bodyRef)) == null ? void 0 : _a.scrollToItem(row, 1, strategy);\n  }\n  function forceUpdate() {\n    var _a, _b;\n    (_a = unref(bodyRef)) == null ? void 0 : _a.$forceUpdate();\n    (_b = unref(headerRef)) == null ? void 0 : _b.$forceUpdate();\n  }\n  return {\n    bodyRef,\n    forceUpdate,\n    fixedRowHeight,\n    gridHeight,\n    hasHeader,\n    headerHeight,\n    headerRef,\n    totalHeight,\n    itemKey,\n    onItemRendered,\n    resetAfterRowIndex,\n    scrollTo,\n    scrollToTop,\n    scrollToRow\n  };\n};\nconst TableGrid = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2GridProps,\n  setup(props, {\n    slots,\n    expose\n  }) {\n    const {\n      ns\n    } = inject(TableV2InjectionKey);\n    const {\n      bodyRef,\n      fixedRowHeight,\n      gridHeight,\n      hasHeader,\n      headerRef,\n      headerHeight,\n      totalHeight,\n      forceUpdate,\n      itemKey,\n      onItemRendered,\n      resetAfterRowIndex,\n      scrollTo,\n      scrollToTop,\n      scrollToRow\n    } = useTableGrid(props);\n    expose({\n      forceUpdate,\n      totalHeight,\n      scrollTo,\n      scrollToTop,\n      scrollToRow,\n      resetAfterRowIndex\n    });\n    const getColumnWidth = () => props.bodyWidth;\n    return () => {\n      const {\n        cache,\n        columns,\n        data,\n        fixedData,\n        useIsScrolling,\n        scrollbarAlwaysOn,\n        scrollbarEndGap,\n        scrollbarStartGap,\n        style,\n        rowHeight,\n        bodyWidth,\n        estimatedRowHeight,\n        headerWidth,\n        height,\n        width,\n        getRowHeight,\n        onScroll\n      } = props;\n      const isDynamicRowEnabled = isNumber(estimatedRowHeight);\n      const Grid = isDynamicRowEnabled ? DynamicSizeGrid : FixedSizeGrid;\n      const _headerHeight = unref(headerHeight);\n      return createVNode(\"div\", {\n        \"role\": \"table\",\n        \"class\": [ns.e(\"table\"), props.class],\n        \"style\": style\n      }, [createVNode(Grid, {\n        \"ref\": bodyRef,\n        \"data\": data,\n        \"useIsScrolling\": useIsScrolling,\n        \"itemKey\": itemKey,\n        \"columnCache\": 0,\n        \"columnWidth\": isDynamicRowEnabled ? getColumnWidth : bodyWidth,\n        \"totalColumn\": 1,\n        \"totalRow\": data.length,\n        \"rowCache\": cache,\n        \"rowHeight\": isDynamicRowEnabled ? getRowHeight : rowHeight,\n        \"width\": width,\n        \"height\": unref(gridHeight),\n        \"class\": ns.e(\"body\"),\n        \"role\": \"rowgroup\",\n        \"scrollbarStartGap\": scrollbarStartGap,\n        \"scrollbarEndGap\": scrollbarEndGap,\n        \"scrollbarAlwaysOn\": scrollbarAlwaysOn,\n        \"onScroll\": onScroll,\n        \"onItemRendered\": onItemRendered,\n        \"perfMode\": false\n      }, {\n        default: (params) => {\n          var _a;\n          const rowData = data[params.rowIndex];\n          return (_a = slots.row) == null ? void 0 : _a.call(slots, {\n            ...params,\n            columns,\n            rowData\n          });\n        }\n      }), unref(hasHeader) && createVNode(TableV2Header, {\n        \"ref\": headerRef,\n        \"class\": ns.e(\"header-wrapper\"),\n        \"columns\": columns,\n        \"headerData\": data,\n        \"headerHeight\": props.headerHeight,\n        \"fixedHeaderData\": fixedData,\n        \"rowWidth\": headerWidth,\n        \"rowHeight\": rowHeight,\n        \"width\": width,\n        \"height\": Math.min(_headerHeight + unref(fixedRowHeight), height)\n      }, {\n        dynamic: slots.header,\n        fixed: slots.row\n      })]);\n    };\n  }\n});\n\nexport { TableGrid as default };\n//# sourceMappingURL=table-grid.mjs.map\n",
      "start": 1700494475897,
      "end": 1700494475994,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494475995,
      "end": 1700494475995,
      "order": "normal"
    }
  ]
}
