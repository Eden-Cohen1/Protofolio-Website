{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/utils/dom/style.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isNumber, isStringNumber } from '../types.mjs';\nimport '../browser.mjs';\nimport '../strings.mjs';\nimport { entriesOf, keysOf } from '../objects.mjs';\nimport { debugWarn } from '../error.mjs';\nimport { isClient } from '@vueuse/core';\nimport { camelize, isObject, isString } from '@vue/shared';\n\nconst SCOPE = \"utils/dom/style\";\nconst classNameToArray = (cls = \"\") => cls.split(\" \").filter((item) => !!item.trim());\nconst hasClass = (el, cls) => {\n  if (!el || !cls)\n    return false;\n  if (cls.includes(\" \"))\n    throw new Error(\"className should not contain space.\");\n  return el.classList.contains(cls);\n};\nconst addClass = (el, cls) => {\n  if (!el || !cls.trim())\n    return;\n  el.classList.add(...classNameToArray(cls));\n};\nconst removeClass = (el, cls) => {\n  if (!el || !cls.trim())\n    return;\n  el.classList.remove(...classNameToArray(cls));\n};\nconst getStyle = (element, styleName) => {\n  var _a;\n  if (!isClient || !element || !styleName)\n    return \"\";\n  let key = camelize(styleName);\n  if (key === \"float\")\n    key = \"cssFloat\";\n  try {\n    const style = element.style[key];\n    if (style)\n      return style;\n    const computed = (_a = document.defaultView) == null ? void 0 : _a.getComputedStyle(element, \"\");\n    return computed ? computed[key] : \"\";\n  } catch (e) {\n    return element.style[key];\n  }\n};\nconst setStyle = (element, styleName, value) => {\n  if (!element || !styleName)\n    return;\n  if (isObject(styleName)) {\n    entriesOf(styleName).forEach(([prop, value2]) => setStyle(element, prop, value2));\n  } else {\n    const key = camelize(styleName);\n    element.style[key] = value;\n  }\n};\nconst removeStyle = (element, style) => {\n  if (!element || !style)\n    return;\n  if (isObject(style)) {\n    keysOf(style).forEach((prop) => removeStyle(element, prop));\n  } else {\n    setStyle(element, style, \"\");\n  }\n};\nfunction addUnit(value, defaultUnit = \"px\") {\n  if (!value)\n    return \"\";\n  if (isNumber(value) || isStringNumber(value)) {\n    return `${value}${defaultUnit}`;\n  } else if (isString(value)) {\n    return value;\n  }\n  debugWarn(SCOPE, \"binding value must be a string or number\");\n}\n\nexport { addClass, addUnit, classNameToArray, getStyle, hasClass, removeClass, removeStyle, setStyle };\n//# sourceMappingURL=style.mjs.map\n",
      "start": 1700406281832,
      "end": 1700406281952,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406281952,
      "end": 1700406281952,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1700406281953,
      "end": 1700406281953,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406281953,
      "end": 1700406281953,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406281953,
      "end": 1700406281953,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406281953,
      "end": 1700406281953,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406281953,
      "end": 1700406281953,
      "order": "normal"
    }
  ]
}
