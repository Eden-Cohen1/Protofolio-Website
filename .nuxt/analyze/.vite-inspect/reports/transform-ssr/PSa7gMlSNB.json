{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/watermark/src/useClips.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const FontGap = 3;\nfunction prepareCanvas(width, height, ratio = 1) {\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  const realWidth = width * ratio;\n  const realHeight = height * ratio;\n  canvas.setAttribute(\"width\", `${realWidth}px`);\n  canvas.setAttribute(\"height\", `${realHeight}px`);\n  ctx.save();\n  return [ctx, canvas, realWidth, realHeight];\n}\nfunction useClips() {\n  function getClips(content, rotate, ratio, width, height, font, gapX, gapY) {\n    const [ctx, canvas, contentWidth, contentHeight] = prepareCanvas(width, height, ratio);\n    if (content instanceof HTMLImageElement) {\n      ctx.drawImage(content, 0, 0, contentWidth, contentHeight);\n    } else {\n      const {\n        color,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        fontFamily,\n        textAlign,\n        textBaseline\n      } = font;\n      const mergedFontSize = Number(fontSize) * ratio;\n      ctx.font = `${fontStyle} normal ${fontWeight} ${mergedFontSize}px/${height}px ${fontFamily}`;\n      ctx.fillStyle = color;\n      ctx.textAlign = textAlign;\n      ctx.textBaseline = textBaseline;\n      const contents = Array.isArray(content) ? content : [content];\n      contents == null ? void 0 : contents.forEach((item, index) => {\n        ctx.fillText(item != null ? item : \"\", contentWidth / 2, index * (mergedFontSize + FontGap * ratio));\n      });\n    }\n    const angle = Math.PI / 180 * Number(rotate);\n    const maxSize = Math.max(width, height);\n    const [rCtx, rCanvas, realMaxSize] = prepareCanvas(maxSize, maxSize, ratio);\n    rCtx.translate(realMaxSize / 2, realMaxSize / 2);\n    rCtx.rotate(angle);\n    if (contentWidth > 0 && contentHeight > 0) {\n      rCtx.drawImage(canvas, -contentWidth / 2, -contentHeight / 2);\n    }\n    function getRotatePos(x, y) {\n      const targetX = x * Math.cos(angle) - y * Math.sin(angle);\n      const targetY = x * Math.sin(angle) + y * Math.cos(angle);\n      return [targetX, targetY];\n    }\n    let left = 0;\n    let right = 0;\n    let top = 0;\n    let bottom = 0;\n    const halfWidth = contentWidth / 2;\n    const halfHeight = contentHeight / 2;\n    const points = [\n      [0 - halfWidth, 0 - halfHeight],\n      [0 + halfWidth, 0 - halfHeight],\n      [0 + halfWidth, 0 + halfHeight],\n      [0 - halfWidth, 0 + halfHeight]\n    ];\n    points.forEach(([x, y]) => {\n      const [targetX, targetY] = getRotatePos(x, y);\n      left = Math.min(left, targetX);\n      right = Math.max(right, targetX);\n      top = Math.min(top, targetY);\n      bottom = Math.max(bottom, targetY);\n    });\n    const cutLeft = left + realMaxSize / 2;\n    const cutTop = top + realMaxSize / 2;\n    const cutWidth = right - left;\n    const cutHeight = bottom - top;\n    const realGapX = gapX * ratio;\n    const realGapY = gapY * ratio;\n    const filledWidth = (cutWidth + realGapX) * 2;\n    const filledHeight = cutHeight + realGapY;\n    const [fCtx, fCanvas] = prepareCanvas(filledWidth, filledHeight);\n    function drawImg(targetX = 0, targetY = 0) {\n      fCtx.drawImage(rCanvas, cutLeft, cutTop, cutWidth, cutHeight, targetX, targetY, cutWidth, cutHeight);\n    }\n    drawImg();\n    drawImg(cutWidth + realGapX, -cutHeight / 2 - realGapY / 2);\n    drawImg(cutWidth + realGapX, +cutHeight / 2 + realGapY / 2);\n    return [fCanvas.toDataURL(), filledWidth / ratio, filledHeight / ratio];\n  }\n  return getClips;\n}\n\nexport { FontGap, useClips as default };\n//# sourceMappingURL=useClips.mjs.map\n",
      "start": 1700439450400,
      "end": 1700439450522,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439450522,
      "end": 1700439450522,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439450522,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439450522,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700439450523,
      "end": 1700439450523,
      "order": "normal"
    }
  ]
}
