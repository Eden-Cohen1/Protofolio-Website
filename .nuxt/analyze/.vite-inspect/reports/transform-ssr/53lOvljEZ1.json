{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/time-picker/src/composables/use-time-picker.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, watch } from 'vue';\nimport { makeList } from '../utils.mjs';\n\nconst makeAvailableArr = (disabledList) => {\n  const trueOrNumber = (isDisabled, index) => isDisabled || index;\n  const getNumber = (predicate) => predicate !== true;\n  return disabledList.map(trueOrNumber).filter(getNumber);\n};\nconst getTimeLists = (disabledHours, disabledMinutes, disabledSeconds) => {\n  const getHoursList = (role, compare) => {\n    return makeList(24, disabledHours && (() => disabledHours == null ? void 0 : disabledHours(role, compare)));\n  };\n  const getMinutesList = (hour, role, compare) => {\n    return makeList(60, disabledMinutes && (() => disabledMinutes == null ? void 0 : disabledMinutes(hour, role, compare)));\n  };\n  const getSecondsList = (hour, minute, role, compare) => {\n    return makeList(60, disabledSeconds && (() => disabledSeconds == null ? void 0 : disabledSeconds(hour, minute, role, compare)));\n  };\n  return {\n    getHoursList,\n    getMinutesList,\n    getSecondsList\n  };\n};\nconst buildAvailableTimeSlotGetter = (disabledHours, disabledMinutes, disabledSeconds) => {\n  const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(disabledHours, disabledMinutes, disabledSeconds);\n  const getAvailableHours = (role, compare) => {\n    return makeAvailableArr(getHoursList(role, compare));\n  };\n  const getAvailableMinutes = (hour, role, compare) => {\n    return makeAvailableArr(getMinutesList(hour, role, compare));\n  };\n  const getAvailableSeconds = (hour, minute, role, compare) => {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare));\n  };\n  return {\n    getAvailableHours,\n    getAvailableMinutes,\n    getAvailableSeconds\n  };\n};\nconst useOldValue = (props) => {\n  const oldValue = ref(props.parsedValue);\n  watch(() => props.visible, (val) => {\n    if (!val) {\n      oldValue.value = props.parsedValue;\n    }\n  });\n  return oldValue;\n};\n\nexport { buildAvailableTimeSlotGetter, getTimeLists, useOldValue };\n//# sourceMappingURL=use-time-picker.mjs.map\n",
      "start": 1700494474725,
      "end": 1700494474808,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494474808,
      "end": 1700494474808,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494474808,
      "end": 1700494474808,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494474808,
      "end": 1700494474808,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494474808,
      "end": 1700494474808,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494474808,
      "end": 1700494474808,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494474808,
      "end": 1700494474808,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494474808,
      "end": 1700494474808,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494474809,
      "end": 1700494474809,
      "order": "normal"
    }
  ]
}
