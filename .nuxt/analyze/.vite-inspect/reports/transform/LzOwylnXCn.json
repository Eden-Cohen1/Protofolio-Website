{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/loading/src/directive.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, isRef } from 'vue';\nimport { isObject, isString, hyphenate } from '@vue/shared';\nimport { Loading } from './service.mjs';\n\nconst INSTANCE_KEY = Symbol(\"ElLoading\");\nconst createInstance = (el, binding) => {\n  var _a, _b, _c, _d;\n  const vm = binding.instance;\n  const getBindingProp = (key) => isObject(binding.value) ? binding.value[key] : void 0;\n  const resolveExpression = (key) => {\n    const data = isString(key) && (vm == null ? void 0 : vm[key]) || key;\n    if (data)\n      return ref(data);\n    else\n      return data;\n  };\n  const getProp = (name) => resolveExpression(getBindingProp(name) || el.getAttribute(`element-loading-${hyphenate(name)}`));\n  const fullscreen = (_a = getBindingProp(\"fullscreen\")) != null ? _a : binding.modifiers.fullscreen;\n  const options = {\n    text: getProp(\"text\"),\n    svg: getProp(\"svg\"),\n    svgViewBox: getProp(\"svgViewBox\"),\n    spinner: getProp(\"spinner\"),\n    background: getProp(\"background\"),\n    customClass: getProp(\"customClass\"),\n    fullscreen,\n    target: (_b = getBindingProp(\"target\")) != null ? _b : fullscreen ? void 0 : el,\n    body: (_c = getBindingProp(\"body\")) != null ? _c : binding.modifiers.body,\n    lock: (_d = getBindingProp(\"lock\")) != null ? _d : binding.modifiers.lock\n  };\n  el[INSTANCE_KEY] = {\n    options,\n    instance: Loading(options)\n  };\n};\nconst updateOptions = (newOptions, originalOptions) => {\n  for (const key of Object.keys(originalOptions)) {\n    if (isRef(originalOptions[key]))\n      originalOptions[key].value = newOptions[key];\n  }\n};\nconst vLoading = {\n  mounted(el, binding) {\n    if (binding.value) {\n      createInstance(el, binding);\n    }\n  },\n  updated(el, binding) {\n    const instance = el[INSTANCE_KEY];\n    if (binding.oldValue !== binding.value) {\n      if (binding.value && !binding.oldValue) {\n        createInstance(el, binding);\n      } else if (binding.value && binding.oldValue) {\n        if (isObject(binding.value))\n          updateOptions(binding.value, instance.options);\n      } else {\n        instance == null ? void 0 : instance.instance.close();\n      }\n    }\n  },\n  unmounted(el) {\n    var _a;\n    (_a = el[INSTANCE_KEY]) == null ? void 0 : _a.instance.close();\n  }\n};\n\nexport { vLoading };\n//# sourceMappingURL=directive.mjs.map\n",
      "start": 1700406270262,
      "end": 1700406270372,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406270372,
      "end": 1700406270372,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406270373,
      "end": 1700406270373,
      "order": "normal"
    }
  ]
}
