{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/input/src/utils.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import '../../../utils/index.mjs';\nimport { isFirefox } from '../../../utils/browser.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\n\nlet hiddenTextarea = void 0;\nconst HIDDEN_STYLE = `\n  height:0 !important;\n  visibility:hidden !important;\n  ${isFirefox() ? \"\" : \"overflow:hidden !important;\"}\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important;\n`;\nconst CONTEXT_STYLE = [\n  \"letter-spacing\",\n  \"line-height\",\n  \"padding-top\",\n  \"padding-bottom\",\n  \"font-family\",\n  \"font-weight\",\n  \"font-size\",\n  \"text-rendering\",\n  \"text-transform\",\n  \"width\",\n  \"text-indent\",\n  \"padding-left\",\n  \"padding-right\",\n  \"border-width\",\n  \"box-sizing\"\n];\nfunction calculateNodeStyling(targetElement) {\n  const style = window.getComputedStyle(targetElement);\n  const boxSizing = style.getPropertyValue(\"box-sizing\");\n  const paddingSize = Number.parseFloat(style.getPropertyValue(\"padding-bottom\")) + Number.parseFloat(style.getPropertyValue(\"padding-top\"));\n  const borderSize = Number.parseFloat(style.getPropertyValue(\"border-bottom-width\")) + Number.parseFloat(style.getPropertyValue(\"border-top-width\"));\n  const contextStyle = CONTEXT_STYLE.map((name) => `${name}:${style.getPropertyValue(name)}`).join(\";\");\n  return { contextStyle, paddingSize, borderSize, boxSizing };\n}\nfunction calcTextareaHeight(targetElement, minRows = 1, maxRows) {\n  var _a;\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement(\"textarea\");\n    document.body.appendChild(hiddenTextarea);\n  }\n  const { paddingSize, borderSize, boxSizing, contextStyle } = calculateNodeStyling(targetElement);\n  hiddenTextarea.setAttribute(\"style\", `${contextStyle};${HIDDEN_STYLE}`);\n  hiddenTextarea.value = targetElement.value || targetElement.placeholder || \"\";\n  let height = hiddenTextarea.scrollHeight;\n  const result = {};\n  if (boxSizing === \"border-box\") {\n    height = height + borderSize;\n  } else if (boxSizing === \"content-box\") {\n    height = height - paddingSize;\n  }\n  hiddenTextarea.value = \"\";\n  const singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  if (isNumber(minRows)) {\n    let minHeight = singleRowHeight * minRows;\n    if (boxSizing === \"border-box\") {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n    height = Math.max(minHeight, height);\n    result.minHeight = `${minHeight}px`;\n  }\n  if (isNumber(maxRows)) {\n    let maxHeight = singleRowHeight * maxRows;\n    if (boxSizing === \"border-box\") {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n    height = Math.min(maxHeight, height);\n  }\n  result.height = `${height}px`;\n  (_a = hiddenTextarea.parentNode) == null ? void 0 : _a.removeChild(hiddenTextarea);\n  hiddenTextarea = void 0;\n  return result;\n}\n\nexport { calcTextareaHeight };\n//# sourceMappingURL=utils.mjs.map\n",
      "start": 1700406273524,
      "end": 1700406273655,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406273655,
      "end": 1700406273655,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406273656,
      "end": 1700406273656,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406273657,
      "end": 1700406273657,
      "order": "normal"
    }
  ]
}
