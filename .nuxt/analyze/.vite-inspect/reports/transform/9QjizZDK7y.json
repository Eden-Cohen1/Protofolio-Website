{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/lodash-es/_createHybrid.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import composeArgs from './_composeArgs.js';\nimport composeArgsRight from './_composeArgsRight.js';\nimport countHolders from './_countHolders.js';\nimport createCtor from './_createCtor.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport reorder from './_reorder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nexport default createHybrid;\n",
      "start": 1700406276021,
      "end": 1700406276156,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406276156,
      "end": 1700406276156,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406276156,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406276157,
      "end": 1700406276157,
      "order": "normal"
    }
  ]
}
