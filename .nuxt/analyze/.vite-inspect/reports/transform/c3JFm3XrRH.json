{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/lodash-es/_baseSortedIndexBy.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import isSymbol from './isSymbol.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  var low = 0,\n      high = array == null ? 0 : array.length;\n  if (high === 0) {\n    return 0;\n  }\n\n  value = iteratee(value);\n  var valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? (computed <= value) : (computed < value);\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nexport default baseSortedIndexBy;\n",
      "start": 1700439444109,
      "end": 1700439444143,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439444143,
      "end": 1700439444143,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439444143,
      "end": 1700439444143,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700439444143,
      "end": 1700439444143,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700439444143,
      "end": 1700439444143,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700439444143,
      "end": 1700439444143,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700439444143,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439444144,
      "end": 1700439444144,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700439444145,
      "end": 1700439444145,
      "order": "normal"
    }
  ]
}
