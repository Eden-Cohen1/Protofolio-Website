{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/checkbox/src/checkbox-button.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, useSlots, inject, computed, openBlock, createElementBlock, normalizeClass, unref, withDirectives, isRef, withModifiers, vModelCheckbox, normalizeStyle, renderSlot, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { checkboxGroupContextKey } from './constants.mjs';\nimport './composables/index.mjs';\nimport { checkboxProps, checkboxEmits } from './checkbox.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useCheckbox } from './composables/use-checkbox.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _hoisted_1 = [\"name\", \"tabindex\", \"disabled\", \"true-value\", \"false-value\"];\nconst _hoisted_2 = [\"name\", \"tabindex\", \"disabled\", \"value\"];\nconst __default__ = defineComponent({\n  name: \"ElCheckboxButton\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: checkboxProps,\n  emits: checkboxEmits,\n  setup(__props) {\n    const props = __props;\n    const slots = useSlots();\n    const {\n      isFocused,\n      isChecked,\n      isDisabled,\n      checkboxButtonSize,\n      model,\n      handleChange\n    } = useCheckbox(props, slots);\n    const checkboxGroup = inject(checkboxGroupContextKey, void 0);\n    const ns = useNamespace(\"checkbox\");\n    const activeStyle = computed(() => {\n      var _a, _b, _c, _d;\n      const fillValue = (_b = (_a = checkboxGroup == null ? void 0 : checkboxGroup.fill) == null ? void 0 : _a.value) != null ? _b : \"\";\n      return {\n        backgroundColor: fillValue,\n        borderColor: fillValue,\n        color: (_d = (_c = checkboxGroup == null ? void 0 : checkboxGroup.textColor) == null ? void 0 : _c.value) != null ? _d : \"\",\n        boxShadow: fillValue ? `-1px 0 0 0 ${fillValue}` : void 0\n      };\n    });\n    const labelKls = computed(() => {\n      return [\n        ns.b(\"button\"),\n        ns.bm(\"button\", checkboxButtonSize.value),\n        ns.is(\"disabled\", isDisabled.value),\n        ns.is(\"checked\", isChecked.value),\n        ns.is(\"focus\", isFocused.value)\n      ];\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"label\", {\n        class: normalizeClass(unref(labelKls))\n      }, [\n        _ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock(\"input\", {\n          key: 0,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event) => isRef(model) ? model.value = $event : null),\n          class: normalizeClass(unref(ns).be(\"button\", \"original\")),\n          type: \"checkbox\",\n          name: _ctx.name,\n          tabindex: _ctx.tabindex,\n          disabled: unref(isDisabled),\n          \"true-value\": _ctx.trueLabel,\n          \"false-value\": _ctx.falseLabel,\n          onChange: _cache[1] || (_cache[1] = (...args) => unref(handleChange) && unref(handleChange)(...args)),\n          onFocus: _cache[2] || (_cache[2] = ($event) => isFocused.value = true),\n          onBlur: _cache[3] || (_cache[3] = ($event) => isFocused.value = false),\n          onClick: _cache[4] || (_cache[4] = withModifiers(() => {\n          }, [\"stop\"]))\n        }, null, 42, _hoisted_1)), [\n          [vModelCheckbox, unref(model)]\n        ]) : withDirectives((openBlock(), createElementBlock(\"input\", {\n          key: 1,\n          \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event) => isRef(model) ? model.value = $event : null),\n          class: normalizeClass(unref(ns).be(\"button\", \"original\")),\n          type: \"checkbox\",\n          name: _ctx.name,\n          tabindex: _ctx.tabindex,\n          disabled: unref(isDisabled),\n          value: _ctx.label,\n          onChange: _cache[6] || (_cache[6] = (...args) => unref(handleChange) && unref(handleChange)(...args)),\n          onFocus: _cache[7] || (_cache[7] = ($event) => isFocused.value = true),\n          onBlur: _cache[8] || (_cache[8] = ($event) => isFocused.value = false),\n          onClick: _cache[9] || (_cache[9] = withModifiers(() => {\n          }, [\"stop\"]))\n        }, null, 42, _hoisted_2)), [\n          [vModelCheckbox, unref(model)]\n        ]),\n        _ctx.$slots.default || _ctx.label ? (openBlock(), createElementBlock(\"span\", {\n          key: 2,\n          class: normalizeClass(unref(ns).be(\"button\", \"inner\")),\n          style: normalizeStyle(unref(isChecked) ? unref(activeStyle) : void 0)\n        }, [\n          renderSlot(_ctx.$slots, \"default\", {}, () => [\n            createTextVNode(toDisplayString(_ctx.label), 1)\n          ])\n        ], 6)) : createCommentVNode(\"v-if\", true)\n      ], 2);\n    };\n  }\n});\nvar CheckboxButton = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-button.vue\"]]);\n\nexport { CheckboxButton as default };\n//# sourceMappingURL=checkbox-button.mjs.map\n",
      "start": 1700494464792,
      "end": 1700494465123,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494465123,
      "end": 1700494465123,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494465124,
      "end": 1700494465124,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494465124,
      "end": 1700494465124,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494465124,
      "end": 1700494465124,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494465124,
      "end": 1700494465124,
      "order": "normal"
    }
  ]
}
