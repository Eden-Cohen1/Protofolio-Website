{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/lodash-es/_baseIsTypedArray.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n",
      "start": 1700494468653,
      "end": 1700494468699,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494468699,
      "end": 1700494468699,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494468699,
      "end": 1700494468700,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494468700,
      "end": 1700494468700,
      "order": "normal"
    }
  ]
}
