{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/message/src/method.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isVNode, render, createVNode } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../config-provider/index.mjs';\nimport MessageConstructor from './message2.mjs';\nimport { messageDefaults, messageTypes } from './message.mjs';\nimport { instances } from './instance.mjs';\nimport { isString, isFunction } from '@vue/shared';\nimport { isElement, isNumber } from '../../../utils/types.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isClient } from '@vueuse/core';\nimport { messageConfig } from '../../config-provider/src/config-provider.mjs';\n\nlet seed = 1;\nconst normalizeOptions = (params) => {\n  const options = !params || isString(params) || isVNode(params) || isFunction(params) ? { message: params } : params;\n  const normalized = {\n    ...messageDefaults,\n    ...options\n  };\n  if (!normalized.appendTo) {\n    normalized.appendTo = document.body;\n  } else if (isString(normalized.appendTo)) {\n    let appendTo = document.querySelector(normalized.appendTo);\n    if (!isElement(appendTo)) {\n      debugWarn(\"ElMessage\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n      appendTo = document.body;\n    }\n    normalized.appendTo = appendTo;\n  }\n  return normalized;\n};\nconst closeMessage = (instance) => {\n  const idx = instances.indexOf(instance);\n  if (idx === -1)\n    return;\n  instances.splice(idx, 1);\n  const { handler } = instance;\n  handler.close();\n};\nconst createMessage = ({ appendTo, ...options }, context) => {\n  const id = `message_${seed++}`;\n  const userOnClose = options.onClose;\n  const container = document.createElement(\"div\");\n  const props = {\n    ...options,\n    id,\n    onClose: () => {\n      userOnClose == null ? void 0 : userOnClose();\n      closeMessage(instance);\n    },\n    onDestroy: () => {\n      render(null, container);\n    }\n  };\n  const vnode = createVNode(MessageConstructor, props, isFunction(props.message) || isVNode(props.message) ? {\n    default: isFunction(props.message) ? props.message : () => props.message\n  } : null);\n  vnode.appContext = context || message._context;\n  render(vnode, container);\n  appendTo.appendChild(container.firstElementChild);\n  const vm = vnode.component;\n  const handler = {\n    close: () => {\n      vm.exposed.visible.value = false;\n    }\n  };\n  const instance = {\n    id,\n    vnode,\n    vm,\n    handler,\n    props: vnode.component.props\n  };\n  return instance;\n};\nconst message = (options = {}, context) => {\n  if (!isClient)\n    return { close: () => void 0 };\n  if (isNumber(messageConfig.max) && instances.length >= messageConfig.max) {\n    return { close: () => void 0 };\n  }\n  const normalized = normalizeOptions(options);\n  if (normalized.grouping && instances.length) {\n    const instance2 = instances.find(({ vnode: vm }) => {\n      var _a;\n      return ((_a = vm.props) == null ? void 0 : _a.message) === normalized.message;\n    });\n    if (instance2) {\n      instance2.props.repeatNum += 1;\n      instance2.props.type = normalized.type;\n      return instance2.handler;\n    }\n  }\n  const instance = createMessage(normalized, context);\n  instances.push(instance);\n  return instance.handler;\n};\nmessageTypes.forEach((type) => {\n  message[type] = (options = {}, appContext) => {\n    const normalized = normalizeOptions(options);\n    return message({ ...normalized, type }, appContext);\n  };\n});\nfunction closeAll(type) {\n  for (const instance of instances) {\n    if (!type || type === instance.props.type) {\n      instance.handler.close();\n    }\n  }\n}\nmessage.closeAll = closeAll;\nmessage._context = null;\n\nexport { closeAll, message as default };\n//# sourceMappingURL=method.mjs.map\n",
      "start": 1700406272433,
      "end": 1700406272723,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406272723,
      "end": 1700406272723,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406272723,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406272724,
      "end": 1700406272724,
      "order": "normal"
    }
  ]
}
