{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/popconfirm/src/popconfirm2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, ref, computed, openBlock, createBlock, unref, mergeProps, withCtx, createElementVNode, normalizeClass, normalizeStyle, resolveDynamicComponent, createCommentVNode, createTextVNode, toDisplayString, createVNode, renderSlot } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { popconfirmProps, popconfirmEmits } from './popconfirm.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElPopconfirm\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: popconfirmProps,\n  emits: popconfirmEmits,\n  setup(__props, { emit }) {\n    const props = __props;\n    const { t } = useLocale();\n    const ns = useNamespace(\"popconfirm\");\n    const tooltipRef = ref();\n    const hidePopper = () => {\n      var _a, _b;\n      (_b = (_a = tooltipRef.value) == null ? void 0 : _a.onClose) == null ? void 0 : _b.call(_a);\n    };\n    const style = computed(() => {\n      return {\n        width: addUnit(props.width)\n      };\n    });\n    const confirm = (e) => {\n      emit(\"confirm\", e);\n      hidePopper();\n    };\n    const cancel = (e) => {\n      emit(\"cancel\", e);\n      hidePopper();\n    };\n    const finalConfirmButtonText = computed(() => props.confirmButtonText || t(\"el.popconfirm.confirmButtonText\"));\n    const finalCancelButtonText = computed(() => props.cancelButtonText || t(\"el.popconfirm.cancelButtonText\"));\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(ElTooltip), mergeProps({\n        ref_key: \"tooltipRef\",\n        ref: tooltipRef,\n        trigger: \"click\",\n        effect: \"light\"\n      }, _ctx.$attrs, {\n        \"popper-class\": `${unref(ns).namespace.value}-popover`,\n        \"popper-style\": unref(style),\n        teleported: _ctx.teleported,\n        \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n        \"hide-after\": _ctx.hideAfter,\n        persistent: _ctx.persistent\n      }), {\n        content: withCtx(() => [\n          createElementVNode(\"div\", {\n            class: normalizeClass(unref(ns).b())\n          }, [\n            createElementVNode(\"div\", {\n              class: normalizeClass(unref(ns).e(\"main\"))\n            }, [\n              !_ctx.hideIcon && _ctx.icon ? (openBlock(), createBlock(unref(ElIcon), {\n                key: 0,\n                class: normalizeClass(unref(ns).e(\"icon\")),\n                style: normalizeStyle({ color: _ctx.iconColor })\n              }, {\n                default: withCtx(() => [\n                  (openBlock(), createBlock(resolveDynamicComponent(_ctx.icon)))\n                ]),\n                _: 1\n              }, 8, [\"class\", \"style\"])) : createCommentVNode(\"v-if\", true),\n              createTextVNode(\" \" + toDisplayString(_ctx.title), 1)\n            ], 2),\n            createElementVNode(\"div\", {\n              class: normalizeClass(unref(ns).e(\"action\"))\n            }, [\n              createVNode(unref(ElButton), {\n                size: \"small\",\n                type: _ctx.cancelButtonType === \"text\" ? \"\" : _ctx.cancelButtonType,\n                text: _ctx.cancelButtonType === \"text\",\n                onClick: cancel\n              }, {\n                default: withCtx(() => [\n                  createTextVNode(toDisplayString(unref(finalCancelButtonText)), 1)\n                ]),\n                _: 1\n              }, 8, [\"type\", \"text\"]),\n              createVNode(unref(ElButton), {\n                size: \"small\",\n                type: _ctx.confirmButtonType === \"text\" ? \"\" : _ctx.confirmButtonType,\n                text: _ctx.confirmButtonType === \"text\",\n                onClick: confirm\n              }, {\n                default: withCtx(() => [\n                  createTextVNode(toDisplayString(unref(finalConfirmButtonText)), 1)\n                ]),\n                _: 1\n              }, 8, [\"type\", \"text\"])\n            ], 2)\n          ], 2)\n        ]),\n        default: withCtx(() => [\n          _ctx.$slots.reference ? renderSlot(_ctx.$slots, \"reference\", { key: 0 }) : createCommentVNode(\"v-if\", true)\n        ]),\n        _: 3\n      }, 16, [\"popper-class\", \"popper-style\", \"teleported\", \"hide-after\", \"persistent\"]);\n    };\n  }\n});\nvar Popconfirm = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/popconfirm/src/popconfirm.vue\"]]);\n\nexport { Popconfirm as default };\n//# sourceMappingURL=popconfirm2.mjs.map\n",
      "start": 1700406271948,
      "end": 1700406272075,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406272075,
      "end": 1700406272075,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406272076,
      "end": 1700406272076,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406272076,
      "end": 1700406272076,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406272076,
      "end": 1700406272076,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406272076,
      "end": 1700406272076,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406272077,
      "end": 1700406272077,
      "order": "normal"
    }
  ]
}
