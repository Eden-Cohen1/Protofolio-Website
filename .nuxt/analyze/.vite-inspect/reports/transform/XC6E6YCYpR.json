{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/upload/src/upload-dragger2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, inject, ref, openBlock, createElementBlock, normalizeClass, unref, withModifiers, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../form/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { uploadContextKey } from './constants.mjs';\nimport { uploadDraggerProps, uploadDraggerEmits } from './upload-dragger.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\n\nconst _hoisted_1 = [\"onDrop\", \"onDragover\"];\nconst COMPONENT_NAME = \"ElUploadDrag\";\nconst __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: uploadDraggerProps,\n  emits: uploadDraggerEmits,\n  setup(__props, { emit }) {\n    const uploaderContext = inject(uploadContextKey);\n    if (!uploaderContext) {\n      throwError(COMPONENT_NAME, \"usage: <el-upload><el-upload-dragger /></el-upload>\");\n    }\n    const ns = useNamespace(\"upload\");\n    const dragover = ref(false);\n    const disabled = useFormDisabled();\n    const onDrop = (e) => {\n      if (disabled.value)\n        return;\n      dragover.value = false;\n      e.stopPropagation();\n      const files = Array.from(e.dataTransfer.files);\n      const accept = uploaderContext.accept.value;\n      if (!accept) {\n        emit(\"file\", files);\n        return;\n      }\n      const filesFiltered = files.filter((file) => {\n        const { type, name } = file;\n        const extension = name.includes(\".\") ? `.${name.split(\".\").pop()}` : \"\";\n        const baseType = type.replace(/\\/.*$/, \"\");\n        return accept.split(\",\").map((type2) => type2.trim()).filter((type2) => type2).some((acceptedType) => {\n          if (acceptedType.startsWith(\".\")) {\n            return extension === acceptedType;\n          }\n          if (/\\/\\*$/.test(acceptedType)) {\n            return baseType === acceptedType.replace(/\\/\\*$/, \"\");\n          }\n          if (/^[^/]+\\/[^/]+$/.test(acceptedType)) {\n            return type === acceptedType;\n          }\n          return false;\n        });\n      });\n      emit(\"file\", filesFiltered);\n    };\n    const onDragover = () => {\n      if (!disabled.value)\n        dragover.value = true;\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([unref(ns).b(\"dragger\"), unref(ns).is(\"dragover\", dragover.value)]),\n        onDrop: withModifiers(onDrop, [\"prevent\"]),\n        onDragover: withModifiers(onDragover, [\"prevent\"]),\n        onDragleave: _cache[0] || (_cache[0] = withModifiers(($event) => dragover.value = false, [\"prevent\"]))\n      }, [\n        renderSlot(_ctx.$slots, \"default\")\n      ], 42, _hoisted_1);\n    };\n  }\n});\nvar UploadDragger = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-dragger.vue\"]]);\n\nexport { UploadDragger as default };\n//# sourceMappingURL=upload-dragger2.mjs.map\n",
      "start": 1700439443716,
      "end": 1700439443778,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439443778,
      "end": 1700439443778,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439443778,
      "end": 1700439443778,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700439443778,
      "end": 1700439443779,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700439443779,
      "end": 1700439443779,
      "order": "normal"
    }
  ]
}
