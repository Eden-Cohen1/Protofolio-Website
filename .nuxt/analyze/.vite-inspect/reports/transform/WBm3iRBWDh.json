{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/time-select/src/time-select2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, ref, computed, openBlock, createBlock, unref, withCtx, normalizeClass, resolveDynamicComponent, createCommentVNode, createElementBlock, Fragment, renderList } from 'vue';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat.js';\nimport { ElSelect } from '../../select/index.mjs';\nimport '../../form/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { timeSelectProps } from './time-select.mjs';\nimport { parseTime, formatTime, compareTime, nextTime } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElTimeSelect\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: timeSelectProps,\n  emits: [\"change\", \"blur\", \"focus\", \"update:modelValue\"],\n  setup(__props, { expose }) {\n    const props = __props;\n    dayjs.extend(customParseFormat);\n    const { Option: ElOption } = ElSelect;\n    const nsInput = useNamespace(\"input\");\n    const select = ref();\n    const _disabled = useFormDisabled();\n    const { lang } = useLocale();\n    const value = computed(() => props.modelValue);\n    const start = computed(() => {\n      const time = parseTime(props.start);\n      return time ? formatTime(time) : null;\n    });\n    const end = computed(() => {\n      const time = parseTime(props.end);\n      return time ? formatTime(time) : null;\n    });\n    const step = computed(() => {\n      const time = parseTime(props.step);\n      return time ? formatTime(time) : null;\n    });\n    const minTime = computed(() => {\n      const time = parseTime(props.minTime || \"\");\n      return time ? formatTime(time) : null;\n    });\n    const maxTime = computed(() => {\n      const time = parseTime(props.maxTime || \"\");\n      return time ? formatTime(time) : null;\n    });\n    const items = computed(() => {\n      const result = [];\n      if (props.start && props.end && props.step) {\n        let current = start.value;\n        let currentTime;\n        while (current && end.value && compareTime(current, end.value) <= 0) {\n          currentTime = dayjs(current, \"HH:mm\").locale(lang.value).format(props.format);\n          result.push({\n            value: currentTime,\n            disabled: compareTime(current, minTime.value || \"-1:-1\") <= 0 || compareTime(current, maxTime.value || \"100:100\") >= 0\n          });\n          current = nextTime(current, step.value);\n        }\n      }\n      return result;\n    });\n    const blur = () => {\n      var _a, _b;\n      (_b = (_a = select.value) == null ? void 0 : _a.blur) == null ? void 0 : _b.call(_a);\n    };\n    const focus = () => {\n      var _a, _b;\n      (_b = (_a = select.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    };\n    expose({\n      blur,\n      focus\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(unref(ElSelect), {\n        ref_key: \"select\",\n        ref: select,\n        \"model-value\": unref(value),\n        disabled: unref(_disabled),\n        clearable: _ctx.clearable,\n        \"clear-icon\": _ctx.clearIcon,\n        size: _ctx.size,\n        effect: _ctx.effect,\n        placeholder: _ctx.placeholder,\n        \"default-first-option\": \"\",\n        filterable: _ctx.editable,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = (event) => _ctx.$emit(\"update:modelValue\", event)),\n        onChange: _cache[1] || (_cache[1] = (event) => _ctx.$emit(\"change\", event)),\n        onBlur: _cache[2] || (_cache[2] = (event) => _ctx.$emit(\"blur\", event)),\n        onFocus: _cache[3] || (_cache[3] = (event) => _ctx.$emit(\"focus\", event))\n      }, {\n        prefix: withCtx(() => [\n          _ctx.prefixIcon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            class: normalizeClass(unref(nsInput).e(\"prefix-icon\"))\n          }, {\n            default: withCtx(() => [\n              (openBlock(), createBlock(resolveDynamicComponent(_ctx.prefixIcon)))\n            ]),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)\n        ]),\n        default: withCtx(() => [\n          (openBlock(true), createElementBlock(Fragment, null, renderList(unref(items), (item) => {\n            return openBlock(), createBlock(unref(ElOption), {\n              key: item.value,\n              label: item.value,\n              value: item.value,\n              disabled: item.disabled\n            }, null, 8, [\"label\", \"value\", \"disabled\"]);\n          }), 128))\n        ]),\n        _: 1\n      }, 8, [\"model-value\", \"disabled\", \"clearable\", \"clear-icon\", \"size\", \"effect\", \"placeholder\", \"filterable\"]);\n    };\n  }\n});\nvar TimeSelect = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/time-select/src/time-select.vue\"]]);\n\nexport { TimeSelect as default };\n//# sourceMappingURL=time-select2.mjs.map\n",
      "start": 1700439441381,
      "end": 1700439441468,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700439441468,
      "end": 1700439441468,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700439441468,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700439441469,
      "end": 1700439441469,
      "order": "normal"
    }
  ]
}
