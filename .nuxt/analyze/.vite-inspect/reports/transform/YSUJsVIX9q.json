{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/hooks/use-popper/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { computed, unref, shallowRef, ref, watch, onBeforeUnmount } from 'vue';\nimport { createPopper } from '@popperjs/core';\nimport { fromPairs } from 'lodash-unified';\n\nconst usePopper = (referenceElementRef, popperElementRef, opts = {}) => {\n  const stateUpdater = {\n    name: \"updateState\",\n    enabled: true,\n    phase: \"write\",\n    fn: ({ state }) => {\n      const derivedState = deriveState(state);\n      Object.assign(states.value, derivedState);\n    },\n    requires: [\"computeStyles\"]\n  };\n  const options = computed(() => {\n    const { onFirstUpdate, placement, strategy, modifiers } = unref(opts);\n    return {\n      onFirstUpdate,\n      placement: placement || \"bottom\",\n      strategy: strategy || \"absolute\",\n      modifiers: [\n        ...modifiers || [],\n        stateUpdater,\n        { name: \"applyStyles\", enabled: false }\n      ]\n    };\n  });\n  const instanceRef = shallowRef();\n  const states = ref({\n    styles: {\n      popper: {\n        position: unref(options).strategy,\n        left: \"0\",\n        top: \"0\"\n      },\n      arrow: {\n        position: \"absolute\"\n      }\n    },\n    attributes: {}\n  });\n  const destroy = () => {\n    if (!instanceRef.value)\n      return;\n    instanceRef.value.destroy();\n    instanceRef.value = void 0;\n  };\n  watch(options, (newOptions) => {\n    const instance = unref(instanceRef);\n    if (instance) {\n      instance.setOptions(newOptions);\n    }\n  }, {\n    deep: true\n  });\n  watch([referenceElementRef, popperElementRef], ([referenceElement, popperElement]) => {\n    destroy();\n    if (!referenceElement || !popperElement)\n      return;\n    instanceRef.value = createPopper(referenceElement, popperElement, unref(options));\n  });\n  onBeforeUnmount(() => {\n    destroy();\n  });\n  return {\n    state: computed(() => {\n      var _a;\n      return { ...((_a = unref(instanceRef)) == null ? void 0 : _a.state) || {} };\n    }),\n    styles: computed(() => unref(states).styles),\n    attributes: computed(() => unref(states).attributes),\n    update: () => {\n      var _a;\n      return (_a = unref(instanceRef)) == null ? void 0 : _a.update();\n    },\n    forceUpdate: () => {\n      var _a;\n      return (_a = unref(instanceRef)) == null ? void 0 : _a.forceUpdate();\n    },\n    instanceRef: computed(() => unref(instanceRef))\n  };\n};\nfunction deriveState(state) {\n  const elements = Object.keys(state.elements);\n  const styles = fromPairs(elements.map((element) => [element, state.styles[element] || {}]));\n  const attributes = fromPairs(elements.map((element) => [element, state.attributes[element]]));\n  return {\n    styles,\n    attributes\n  };\n}\n\nexport { usePopper };\n//# sourceMappingURL=index.mjs.map\n",
      "start": 1700406270385,
      "end": 1700406270441,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406270441,
      "end": 1700406270441,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406270442,
      "end": 1700406270442,
      "order": "normal"
    }
  ]
}
