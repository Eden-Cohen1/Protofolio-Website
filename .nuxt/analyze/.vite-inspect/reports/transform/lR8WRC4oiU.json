{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/table/src/table-column/watcher-helper.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getCurrentInstance, watch } from 'vue';\nimport '../../../../utils/index.mjs';\nimport { parseWidth, parseMinWidth } from '../util.mjs';\nimport { hasOwn } from '@vue/shared';\n\nfunction getAllAliases(props, aliases) {\n  return props.reduce((prev, cur) => {\n    prev[cur] = cur;\n    return prev;\n  }, aliases);\n}\nfunction useWatcher(owner, props_) {\n  const instance = getCurrentInstance();\n  const registerComplexWatchers = () => {\n    const props = [\"fixed\"];\n    const aliases = {\n      realWidth: \"width\",\n      realMinWidth: \"minWidth\"\n    };\n    const allAliases = getAllAliases(props, aliases);\n    Object.keys(allAliases).forEach((key) => {\n      const columnKey = aliases[key];\n      if (hasOwn(props_, columnKey)) {\n        watch(() => props_[columnKey], (newVal) => {\n          let value = newVal;\n          if (columnKey === \"width\" && key === \"realWidth\") {\n            value = parseWidth(newVal);\n          }\n          if (columnKey === \"minWidth\" && key === \"realMinWidth\") {\n            value = parseMinWidth(newVal);\n          }\n          instance.columnConfig.value[columnKey] = value;\n          instance.columnConfig.value[key] = value;\n          const updateColumns = columnKey === \"fixed\";\n          owner.value.store.scheduleLayout(updateColumns);\n        });\n      }\n    });\n  };\n  const registerNormalWatchers = () => {\n    const props = [\n      \"label\",\n      \"filters\",\n      \"filterMultiple\",\n      \"filteredValue\",\n      \"sortable\",\n      \"index\",\n      \"formatter\",\n      \"className\",\n      \"labelClassName\",\n      \"showOverflowTooltip\"\n    ];\n    const aliases = {\n      property: \"prop\",\n      align: \"realAlign\",\n      headerAlign: \"realHeaderAlign\"\n    };\n    const allAliases = getAllAliases(props, aliases);\n    Object.keys(allAliases).forEach((key) => {\n      const columnKey = aliases[key];\n      if (hasOwn(props_, columnKey)) {\n        watch(() => props_[columnKey], (newVal) => {\n          instance.columnConfig.value[key] = newVal;\n        });\n      }\n    });\n  };\n  return {\n    registerComplexWatchers,\n    registerNormalWatchers\n  };\n}\n\nexport { useWatcher as default };\n//# sourceMappingURL=watcher-helper.mjs.map\n",
      "start": 1700439442374,
      "end": 1700439442443,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700439442443,
      "end": 1700439442443,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700439442443,
      "end": 1700439442444,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700439442444,
      "end": 1700439442444,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700439442444,
      "end": 1700439442444,
      "order": "normal"
    }
  ]
}
