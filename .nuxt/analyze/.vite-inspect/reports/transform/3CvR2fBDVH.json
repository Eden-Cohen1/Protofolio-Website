{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/@ctrl/tinycolor/dist/module/readability.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { TinyColor } from './index.js';\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n/**\n * AKA `contrast`\n *\n * Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n */\nexport function readability(color1, color2) {\n    var c1 = new TinyColor(color1);\n    var c2 = new TinyColor(color2);\n    return ((Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) /\n        (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05));\n}\n/**\n * Ensure that foreground and background color combinations meet WCAG2 guidelines.\n * The third argument is an object.\n *      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n *      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n * If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n *\n * Example\n * ```ts\n * new TinyColor().isReadable('#000', '#111') => false\n * new TinyColor().isReadable('#000', '#111', { level: 'AA', size: 'large' }) => false\n * ```\n */\nexport function isReadable(color1, color2, wcag2) {\n    var _a, _b;\n    if (wcag2 === void 0) { wcag2 = { level: 'AA', size: 'small' }; }\n    var readabilityLevel = readability(color1, color2);\n    switch (((_a = wcag2.level) !== null && _a !== void 0 ? _a : 'AA') + ((_b = wcag2.size) !== null && _b !== void 0 ? _b : 'small')) {\n        case 'AAsmall':\n        case 'AAAlarge':\n            return readabilityLevel >= 4.5;\n        case 'AAlarge':\n            return readabilityLevel >= 3;\n        case 'AAAsmall':\n            return readabilityLevel >= 7;\n        default:\n            return false;\n    }\n}\n/**\n * Given a base color and a list of possible foreground or background\n * colors for that base, returns the most readable color.\n * Optionally returns Black or White if the most readable color is unreadable.\n *\n * @param baseColor - the base color.\n * @param colorList - array of colors to pick the most readable one from.\n * @param args - and object with extra arguments\n *\n * Example\n * ```ts\n * new TinyColor().mostReadable('#123', ['#124\", \"#125'], { includeFallbackColors: false }).toHexString(); // \"#112255\"\n * new TinyColor().mostReadable('#123', ['#124\", \"#125'],{ includeFallbackColors: true }).toHexString();  // \"#ffffff\"\n * new TinyColor().mostReadable('#a8015a', [\"#faf3f3\"], { includeFallbackColors:true, level: 'AAA', size: 'large' }).toHexString(); // \"#faf3f3\"\n * new TinyColor().mostReadable('#a8015a', [\"#faf3f3\"], { includeFallbackColors:true, level: 'AAA', size: 'small' }).toHexString(); // \"#ffffff\"\n * ```\n */\nexport function mostReadable(baseColor, colorList, args) {\n    if (args === void 0) { args = { includeFallbackColors: false, level: 'AA', size: 'small' }; }\n    var bestColor = null;\n    var bestScore = 0;\n    var includeFallbackColors = args.includeFallbackColors, level = args.level, size = args.size;\n    for (var _i = 0, colorList_1 = colorList; _i < colorList_1.length; _i++) {\n        var color = colorList_1[_i];\n        var score = readability(baseColor, color);\n        if (score > bestScore) {\n            bestScore = score;\n            bestColor = new TinyColor(color);\n        }\n    }\n    if (isReadable(baseColor, bestColor, { level: level, size: size }) || !includeFallbackColors) {\n        return bestColor;\n    }\n    args.includeFallbackColors = false;\n    return mostReadable(baseColor, ['#fff', '#000'], args);\n}\n",
      "start": 1700494468399,
      "end": 1700494468493,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494468493,
      "end": 1700494468493,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494468493,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494468494,
      "end": 1700494468494,
      "order": "normal"
    }
  ]
}
