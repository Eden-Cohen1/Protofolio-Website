{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/upload/src/ajax.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isNil } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { isArray } from '@vue/shared';\n\nconst SCOPE = \"ElUpload\";\nclass UploadAjaxError extends Error {\n  constructor(message, status, method, url) {\n    super(message);\n    this.name = \"UploadAjaxError\";\n    this.status = status;\n    this.method = method;\n    this.url = url;\n  }\n}\nfunction getError(action, option, xhr) {\n  let msg;\n  if (xhr.response) {\n    msg = `${xhr.response.error || xhr.response}`;\n  } else if (xhr.responseText) {\n    msg = `${xhr.responseText}`;\n  } else {\n    msg = `fail to ${option.method} ${action} ${xhr.status}`;\n  }\n  return new UploadAjaxError(msg, xhr.status, option.method, action);\n}\nfunction getBody(xhr) {\n  const text = xhr.responseText || xhr.response;\n  if (!text) {\n    return text;\n  }\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\nconst ajaxUpload = (option) => {\n  if (typeof XMLHttpRequest === \"undefined\")\n    throwError(SCOPE, \"XMLHttpRequest is undefined\");\n  const xhr = new XMLHttpRequest();\n  const action = option.action;\n  if (xhr.upload) {\n    xhr.upload.addEventListener(\"progress\", (evt) => {\n      const progressEvt = evt;\n      progressEvt.percent = evt.total > 0 ? evt.loaded / evt.total * 100 : 0;\n      option.onProgress(progressEvt);\n    });\n  }\n  const formData = new FormData();\n  if (option.data) {\n    for (const [key, value] of Object.entries(option.data)) {\n      if (isArray(value) && value.length)\n        formData.append(key, ...value);\n      else\n        formData.append(key, value);\n    }\n  }\n  formData.append(option.filename, option.file, option.file.name);\n  xhr.addEventListener(\"error\", () => {\n    option.onError(getError(action, option, xhr));\n  });\n  xhr.addEventListener(\"load\", () => {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(action, option, xhr));\n    }\n    option.onSuccess(getBody(xhr));\n  });\n  xhr.open(option.method, action, true);\n  if (option.withCredentials && \"withCredentials\" in xhr) {\n    xhr.withCredentials = true;\n  }\n  const headers = option.headers || {};\n  if (headers instanceof Headers) {\n    headers.forEach((value, key) => xhr.setRequestHeader(key, value));\n  } else {\n    for (const [key, value] of Object.entries(headers)) {\n      if (isNil(value))\n        continue;\n      xhr.setRequestHeader(key, String(value));\n    }\n  }\n  xhr.send(formData);\n  return xhr;\n};\n\nexport { UploadAjaxError, ajaxUpload };\n//# sourceMappingURL=ajax.mjs.map\n",
      "start": 1700439441403,
      "end": 1700439441519,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700439441519,
      "end": 1700439441519,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700439441520,
      "end": 1700439441520,
      "order": "normal"
    }
  ]
}
