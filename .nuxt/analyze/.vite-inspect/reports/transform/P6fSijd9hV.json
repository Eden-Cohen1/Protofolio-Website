{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/alert/src/alert2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, useSlots, ref, computed, openBlock, createBlock, Transition, unref, withCtx, withDirectives, createElementVNode, normalizeClass, resolveDynamicComponent, createCommentVNode, createElementBlock, renderSlot, createTextVNode, toDisplayString, Fragment, createVNode, vShow } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { alertProps, alertEmits } from './alert.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElAlert\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: alertProps,\n  emits: alertEmits,\n  setup(__props, { emit }) {\n    const props = __props;\n    const { Close } = TypeComponents;\n    const slots = useSlots();\n    const ns = useNamespace(\"alert\");\n    const visible = ref(true);\n    const iconComponent = computed(() => TypeComponentsMap[props.type]);\n    const iconClass = computed(() => [\n      ns.e(\"icon\"),\n      { [ns.is(\"big\")]: !!props.description || !!slots.default }\n    ]);\n    const isBoldTitle = computed(() => {\n      return { [ns.is(\"bold\")]: props.description || slots.default };\n    });\n    const close = (evt) => {\n      visible.value = false;\n      emit(\"close\", evt);\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Transition, {\n        name: unref(ns).b(\"fade\"),\n        persisted: \"\"\n      }, {\n        default: withCtx(() => [\n          withDirectives(createElementVNode(\"div\", {\n            class: normalizeClass([unref(ns).b(), unref(ns).m(_ctx.type), unref(ns).is(\"center\", _ctx.center), unref(ns).is(_ctx.effect)]),\n            role: \"alert\"\n          }, [\n            _ctx.showIcon && unref(iconComponent) ? (openBlock(), createBlock(unref(ElIcon), {\n              key: 0,\n              class: normalizeClass(unref(iconClass))\n            }, {\n              default: withCtx(() => [\n                (openBlock(), createBlock(resolveDynamicComponent(unref(iconComponent))))\n              ]),\n              _: 1\n            }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true),\n            createElementVNode(\"div\", {\n              class: normalizeClass(unref(ns).e(\"content\"))\n            }, [\n              _ctx.title || _ctx.$slots.title ? (openBlock(), createElementBlock(\"span\", {\n                key: 0,\n                class: normalizeClass([unref(ns).e(\"title\"), unref(isBoldTitle)])\n              }, [\n                renderSlot(_ctx.$slots, \"title\", {}, () => [\n                  createTextVNode(toDisplayString(_ctx.title), 1)\n                ])\n              ], 2)) : createCommentVNode(\"v-if\", true),\n              _ctx.$slots.default || _ctx.description ? (openBlock(), createElementBlock(\"p\", {\n                key: 1,\n                class: normalizeClass(unref(ns).e(\"description\"))\n              }, [\n                renderSlot(_ctx.$slots, \"default\", {}, () => [\n                  createTextVNode(toDisplayString(_ctx.description), 1)\n                ])\n              ], 2)) : createCommentVNode(\"v-if\", true),\n              _ctx.closable ? (openBlock(), createElementBlock(Fragment, { key: 2 }, [\n                _ctx.closeText ? (openBlock(), createElementBlock(\"div\", {\n                  key: 0,\n                  class: normalizeClass([unref(ns).e(\"close-btn\"), unref(ns).is(\"customed\")]),\n                  onClick: close\n                }, toDisplayString(_ctx.closeText), 3)) : (openBlock(), createBlock(unref(ElIcon), {\n                  key: 1,\n                  class: normalizeClass(unref(ns).e(\"close-btn\")),\n                  onClick: close\n                }, {\n                  default: withCtx(() => [\n                    createVNode(unref(Close))\n                  ]),\n                  _: 1\n                }, 8, [\"class\"]))\n              ], 64)) : createCommentVNode(\"v-if\", true)\n            ], 2)\n          ], 2), [\n            [vShow, visible.value]\n          ])\n        ]),\n        _: 3\n      }, 8, [\"name\"]);\n    };\n  }\n});\nvar Alert = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/alert/src/alert.vue\"]]);\n\nexport { Alert as default };\n//# sourceMappingURL=alert2.mjs.map\n",
      "start": 1700494464496,
      "end": 1700494464762,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494464762,
      "end": 1700494464762,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494464762,
      "end": 1700494464762,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494464762,
      "end": 1700494464762,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494464762,
      "end": 1700494464762,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494464762,
      "end": 1700494464762,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494464763,
      "end": 1700494464763,
      "order": "normal"
    }
  ]
}
