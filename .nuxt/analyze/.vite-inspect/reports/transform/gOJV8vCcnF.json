{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null ? void 0 : (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n",
      "start": 1700406274154,
      "end": 1700406274337,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406274337,
      "end": 1700406274337,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406274337,
      "end": 1700406274338,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406274338,
      "end": 1700406274338,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406274338,
      "end": 1700406274338,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406274338,
      "end": 1700406274338,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406274338,
      "end": 1700406274338,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406274338,
      "end": 1700406274338,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406274338,
      "end": 1700406274338,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406274338,
      "end": 1700406274338,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406274338,
      "end": 1700406274338,
      "order": "normal"
    }
  ]
}
