{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/lodash-es/_baseIntersection.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseIntersection;\n",
      "start": 1700406275746,
      "end": 1700406275787,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406275787,
      "end": 1700406275787,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406275787,
      "end": 1700406275788,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406275788,
      "end": 1700406275788,
      "order": "normal"
    }
  ]
}
