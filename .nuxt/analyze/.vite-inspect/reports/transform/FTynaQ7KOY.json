{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/image-viewer/src/image-viewer2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, markRaw, ref, effectScope, shallowRef, computed, watch, nextTick, onMounted, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, createElementVNode, normalizeClass, unref, normalizeStyle, withModifiers, createCommentVNode, createElementBlock, Fragment, resolveDynamicComponent, renderList, withDirectives, vShow, renderSlot } from 'vue';\nimport { useEventListener } from '@vueuse/core';\nimport { throttle } from 'lodash-unified';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { FullScreen, ScaleToOriginal, Close, ArrowLeft, ArrowRight, ZoomOut, ZoomIn, RefreshLeft, RefreshRight } from '@element-plus/icons-vue';\nimport { imageViewerProps, imageViewerEmits } from './image-viewer.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useZIndex } from '../../../hooks/use-z-index/index.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { keysOf } from '../../../utils/objects.mjs';\n\nconst _hoisted_1 = [\"src\"];\nconst __default__ = defineComponent({\n  name: \"ElImageViewer\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: imageViewerProps,\n  emits: imageViewerEmits,\n  setup(__props, { expose, emit }) {\n    const props = __props;\n    const modes = {\n      CONTAIN: {\n        name: \"contain\",\n        icon: markRaw(FullScreen)\n      },\n      ORIGINAL: {\n        name: \"original\",\n        icon: markRaw(ScaleToOriginal)\n      }\n    };\n    const { t } = useLocale();\n    const ns = useNamespace(\"image-viewer\");\n    const { nextZIndex } = useZIndex();\n    const wrapper = ref();\n    const imgRefs = ref([]);\n    const scopeEventListener = effectScope();\n    const loading = ref(true);\n    const activeIndex = ref(props.initialIndex);\n    const mode = shallowRef(modes.CONTAIN);\n    const transform = ref({\n      scale: 1,\n      deg: 0,\n      offsetX: 0,\n      offsetY: 0,\n      enableTransition: false\n    });\n    const isSingle = computed(() => {\n      const { urlList } = props;\n      return urlList.length <= 1;\n    });\n    const isFirst = computed(() => {\n      return activeIndex.value === 0;\n    });\n    const isLast = computed(() => {\n      return activeIndex.value === props.urlList.length - 1;\n    });\n    const currentImg = computed(() => {\n      return props.urlList[activeIndex.value];\n    });\n    const arrowPrevKls = computed(() => [\n      ns.e(\"btn\"),\n      ns.e(\"prev\"),\n      ns.is(\"disabled\", !props.infinite && isFirst.value)\n    ]);\n    const arrowNextKls = computed(() => [\n      ns.e(\"btn\"),\n      ns.e(\"next\"),\n      ns.is(\"disabled\", !props.infinite && isLast.value)\n    ]);\n    const imgStyle = computed(() => {\n      const { scale, deg, offsetX, offsetY, enableTransition } = transform.value;\n      let translateX = offsetX / scale;\n      let translateY = offsetY / scale;\n      switch (deg % 360) {\n        case 90:\n        case -270:\n          ;\n          [translateX, translateY] = [translateY, -translateX];\n          break;\n        case 180:\n        case -180:\n          ;\n          [translateX, translateY] = [-translateX, -translateY];\n          break;\n        case 270:\n        case -90:\n          ;\n          [translateX, translateY] = [-translateY, translateX];\n          break;\n      }\n      const style = {\n        transform: `scale(${scale}) rotate(${deg}deg) translate(${translateX}px, ${translateY}px)`,\n        transition: enableTransition ? \"transform .3s\" : \"\"\n      };\n      if (mode.value.name === modes.CONTAIN.name) {\n        style.maxWidth = style.maxHeight = \"100%\";\n      }\n      return style;\n    });\n    const computedZIndex = computed(() => {\n      return isNumber(props.zIndex) ? props.zIndex : nextZIndex();\n    });\n    function hide() {\n      unregisterEventListener();\n      emit(\"close\");\n    }\n    function registerEventListener() {\n      const keydownHandler = throttle((e) => {\n        switch (e.code) {\n          case EVENT_CODE.esc:\n            props.closeOnPressEscape && hide();\n            break;\n          case EVENT_CODE.space:\n            toggleMode();\n            break;\n          case EVENT_CODE.left:\n            prev();\n            break;\n          case EVENT_CODE.up:\n            handleActions(\"zoomIn\");\n            break;\n          case EVENT_CODE.right:\n            next();\n            break;\n          case EVENT_CODE.down:\n            handleActions(\"zoomOut\");\n            break;\n        }\n      });\n      const mousewheelHandler = throttle((e) => {\n        const delta = e.deltaY || e.deltaX;\n        handleActions(delta < 0 ? \"zoomIn\" : \"zoomOut\", {\n          zoomRate: props.zoomRate,\n          enableTransition: false\n        });\n      });\n      scopeEventListener.run(() => {\n        useEventListener(document, \"keydown\", keydownHandler);\n        useEventListener(document, \"wheel\", mousewheelHandler);\n      });\n    }\n    function unregisterEventListener() {\n      scopeEventListener.stop();\n    }\n    function handleImgLoad() {\n      loading.value = false;\n    }\n    function handleImgError(e) {\n      loading.value = false;\n      e.target.alt = t(\"el.image.error\");\n    }\n    function handleMouseDown(e) {\n      if (loading.value || e.button !== 0 || !wrapper.value)\n        return;\n      transform.value.enableTransition = false;\n      const { offsetX, offsetY } = transform.value;\n      const startX = e.pageX;\n      const startY = e.pageY;\n      const dragHandler = throttle((ev) => {\n        transform.value = {\n          ...transform.value,\n          offsetX: offsetX + ev.pageX - startX,\n          offsetY: offsetY + ev.pageY - startY\n        };\n      });\n      const removeMousemove = useEventListener(document, \"mousemove\", dragHandler);\n      useEventListener(document, \"mouseup\", () => {\n        removeMousemove();\n      });\n      e.preventDefault();\n    }\n    function reset() {\n      transform.value = {\n        scale: 1,\n        deg: 0,\n        offsetX: 0,\n        offsetY: 0,\n        enableTransition: false\n      };\n    }\n    function toggleMode() {\n      if (loading.value)\n        return;\n      const modeNames = keysOf(modes);\n      const modeValues = Object.values(modes);\n      const currentMode = mode.value.name;\n      const index = modeValues.findIndex((i) => i.name === currentMode);\n      const nextIndex = (index + 1) % modeNames.length;\n      mode.value = modes[modeNames[nextIndex]];\n      reset();\n    }\n    function setActiveItem(index) {\n      const len = props.urlList.length;\n      activeIndex.value = (index + len) % len;\n    }\n    function prev() {\n      if (isFirst.value && !props.infinite)\n        return;\n      setActiveItem(activeIndex.value - 1);\n    }\n    function next() {\n      if (isLast.value && !props.infinite)\n        return;\n      setActiveItem(activeIndex.value + 1);\n    }\n    function handleActions(action, options = {}) {\n      if (loading.value)\n        return;\n      const { minScale, maxScale } = props;\n      const { zoomRate, rotateDeg, enableTransition } = {\n        zoomRate: props.zoomRate,\n        rotateDeg: 90,\n        enableTransition: true,\n        ...options\n      };\n      switch (action) {\n        case \"zoomOut\":\n          if (transform.value.scale > minScale) {\n            transform.value.scale = Number.parseFloat((transform.value.scale / zoomRate).toFixed(3));\n          }\n          break;\n        case \"zoomIn\":\n          if (transform.value.scale < maxScale) {\n            transform.value.scale = Number.parseFloat((transform.value.scale * zoomRate).toFixed(3));\n          }\n          break;\n        case \"clockwise\":\n          transform.value.deg += rotateDeg;\n          emit(\"rotate\", transform.value.deg);\n          break;\n        case \"anticlockwise\":\n          transform.value.deg -= rotateDeg;\n          emit(\"rotate\", transform.value.deg);\n          break;\n      }\n      transform.value.enableTransition = enableTransition;\n    }\n    watch(currentImg, () => {\n      nextTick(() => {\n        const $img = imgRefs.value[0];\n        if (!($img == null ? void 0 : $img.complete)) {\n          loading.value = true;\n        }\n      });\n    });\n    watch(activeIndex, (val) => {\n      reset();\n      emit(\"switch\", val);\n    });\n    onMounted(() => {\n      var _a, _b;\n      registerEventListener();\n      (_b = (_a = wrapper.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    });\n    expose({\n      setActiveItem\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Teleport, {\n        to: \"body\",\n        disabled: !_ctx.teleported\n      }, [\n        createVNode(Transition, {\n          name: \"viewer-fade\",\n          appear: \"\"\n        }, {\n          default: withCtx(() => [\n            createElementVNode(\"div\", {\n              ref_key: \"wrapper\",\n              ref: wrapper,\n              tabindex: -1,\n              class: normalizeClass(unref(ns).e(\"wrapper\")),\n              style: normalizeStyle({ zIndex: unref(computedZIndex) })\n            }, [\n              createElementVNode(\"div\", {\n                class: normalizeClass(unref(ns).e(\"mask\")),\n                onClick: _cache[0] || (_cache[0] = withModifiers(($event) => _ctx.hideOnClickModal && hide(), [\"self\"]))\n              }, null, 2),\n              createCommentVNode(\" CLOSE \"),\n              createElementVNode(\"span\", {\n                class: normalizeClass([unref(ns).e(\"btn\"), unref(ns).e(\"close\")]),\n                onClick: hide\n              }, [\n                createVNode(unref(ElIcon), null, {\n                  default: withCtx(() => [\n                    createVNode(unref(Close))\n                  ]),\n                  _: 1\n                })\n              ], 2),\n              createCommentVNode(\" ARROW \"),\n              !unref(isSingle) ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [\n                createElementVNode(\"span\", {\n                  class: normalizeClass(unref(arrowPrevKls)),\n                  onClick: prev\n                }, [\n                  createVNode(unref(ElIcon), null, {\n                    default: withCtx(() => [\n                      createVNode(unref(ArrowLeft))\n                    ]),\n                    _: 1\n                  })\n                ], 2),\n                createElementVNode(\"span\", {\n                  class: normalizeClass(unref(arrowNextKls)),\n                  onClick: next\n                }, [\n                  createVNode(unref(ElIcon), null, {\n                    default: withCtx(() => [\n                      createVNode(unref(ArrowRight))\n                    ]),\n                    _: 1\n                  })\n                ], 2)\n              ], 64)) : createCommentVNode(\"v-if\", true),\n              createCommentVNode(\" ACTIONS \"),\n              createElementVNode(\"div\", {\n                class: normalizeClass([unref(ns).e(\"btn\"), unref(ns).e(\"actions\")])\n              }, [\n                createElementVNode(\"div\", {\n                  class: normalizeClass(unref(ns).e(\"actions__inner\"))\n                }, [\n                  createVNode(unref(ElIcon), {\n                    onClick: _cache[1] || (_cache[1] = ($event) => handleActions(\"zoomOut\"))\n                  }, {\n                    default: withCtx(() => [\n                      createVNode(unref(ZoomOut))\n                    ]),\n                    _: 1\n                  }),\n                  createVNode(unref(ElIcon), {\n                    onClick: _cache[2] || (_cache[2] = ($event) => handleActions(\"zoomIn\"))\n                  }, {\n                    default: withCtx(() => [\n                      createVNode(unref(ZoomIn))\n                    ]),\n                    _: 1\n                  }),\n                  createElementVNode(\"i\", {\n                    class: normalizeClass(unref(ns).e(\"actions__divider\"))\n                  }, null, 2),\n                  createVNode(unref(ElIcon), { onClick: toggleMode }, {\n                    default: withCtx(() => [\n                      (openBlock(), createBlock(resolveDynamicComponent(unref(mode).icon)))\n                    ]),\n                    _: 1\n                  }),\n                  createElementVNode(\"i\", {\n                    class: normalizeClass(unref(ns).e(\"actions__divider\"))\n                  }, null, 2),\n                  createVNode(unref(ElIcon), {\n                    onClick: _cache[3] || (_cache[3] = ($event) => handleActions(\"anticlockwise\"))\n                  }, {\n                    default: withCtx(() => [\n                      createVNode(unref(RefreshLeft))\n                    ]),\n                    _: 1\n                  }),\n                  createVNode(unref(ElIcon), {\n                    onClick: _cache[4] || (_cache[4] = ($event) => handleActions(\"clockwise\"))\n                  }, {\n                    default: withCtx(() => [\n                      createVNode(unref(RefreshRight))\n                    ]),\n                    _: 1\n                  })\n                ], 2)\n              ], 2),\n              createCommentVNode(\" CANVAS \"),\n              createElementVNode(\"div\", {\n                class: normalizeClass(unref(ns).e(\"canvas\"))\n              }, [\n                (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.urlList, (url, i) => {\n                  return withDirectives((openBlock(), createElementBlock(\"img\", {\n                    ref_for: true,\n                    ref: (el) => imgRefs.value[i] = el,\n                    key: url,\n                    src: url,\n                    style: normalizeStyle(unref(imgStyle)),\n                    class: normalizeClass(unref(ns).e(\"img\")),\n                    onLoad: handleImgLoad,\n                    onError: handleImgError,\n                    onMousedown: handleMouseDown\n                  }, null, 46, _hoisted_1)), [\n                    [vShow, i === activeIndex.value]\n                  ]);\n                }), 128))\n              ], 2),\n              renderSlot(_ctx.$slots, \"default\")\n            ], 6)\n          ]),\n          _: 3\n        })\n      ], 8, [\"disabled\"]);\n    };\n  }\n});\nvar ImageViewer = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/image-viewer/src/image-viewer.vue\"]]);\n\nexport { ImageViewer as default };\n//# sourceMappingURL=image-viewer2.mjs.map\n",
      "start": 1700494465220,
      "end": 1700494465484,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494465484,
      "end": 1700494465484,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494465484,
      "end": 1700494465485,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494465485,
      "end": 1700494465485,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494465485,
      "end": 1700494465485,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494465485,
      "end": 1700494465485,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494465485,
      "end": 1700494465485,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494465485,
      "end": 1700494465485,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494465485,
      "end": 1700494465485,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494465485,
      "end": 1700494465485,
      "order": "normal"
    }
  ]
}
