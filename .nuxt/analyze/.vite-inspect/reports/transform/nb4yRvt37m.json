{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/upload/src/use-handlers.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { watch } from 'vue';\nimport { isNil } from 'lodash-unified';\nimport { useVModel } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { genFileId } from './upload.mjs';\nimport { debugWarn, throwError } from '../../../utils/error.mjs';\n\nconst SCOPE = \"ElUpload\";\nconst revokeFileObjectURL = (file) => {\n  var _a;\n  if ((_a = file.url) == null ? void 0 : _a.startsWith(\"blob:\")) {\n    URL.revokeObjectURL(file.url);\n  }\n};\nconst useHandlers = (props, uploadRef) => {\n  const uploadFiles = useVModel(props, \"fileList\", void 0, { passive: true });\n  const getFile = (rawFile) => uploadFiles.value.find((file) => file.uid === rawFile.uid);\n  function abort(file) {\n    var _a;\n    (_a = uploadRef.value) == null ? void 0 : _a.abort(file);\n  }\n  function clearFiles(states = [\"ready\", \"uploading\", \"success\", \"fail\"]) {\n    uploadFiles.value = uploadFiles.value.filter((row) => !states.includes(row.status));\n  }\n  const handleError = (err, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file)\n      return;\n    console.error(err);\n    file.status = \"fail\";\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1);\n    props.onError(err, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n  const handleProgress = (evt, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file)\n      return;\n    props.onProgress(evt, file, uploadFiles.value);\n    file.status = \"uploading\";\n    file.percentage = Math.round(evt.percent);\n  };\n  const handleSuccess = (response, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file)\n      return;\n    file.status = \"success\";\n    file.response = response;\n    props.onSuccess(response, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n  const handleStart = (file) => {\n    if (isNil(file.uid))\n      file.uid = genFileId();\n    const uploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: \"ready\",\n      size: file.size,\n      raw: file,\n      uid: file.uid\n    };\n    if (props.listType === \"picture-card\" || props.listType === \"picture\") {\n      try {\n        uploadFile.url = URL.createObjectURL(file);\n      } catch (err) {\n        debugWarn(SCOPE, err.message);\n        props.onError(err, uploadFile, uploadFiles.value);\n      }\n    }\n    uploadFiles.value = [...uploadFiles.value, uploadFile];\n    props.onChange(uploadFile, uploadFiles.value);\n  };\n  const handleRemove = async (file) => {\n    const uploadFile = file instanceof File ? getFile(file) : file;\n    if (!uploadFile)\n      throwError(SCOPE, \"file to be removed not found\");\n    const doRemove = (file2) => {\n      abort(file2);\n      const fileList = uploadFiles.value;\n      fileList.splice(fileList.indexOf(file2), 1);\n      props.onRemove(file2, fileList);\n      revokeFileObjectURL(file2);\n    };\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value);\n      if (before !== false)\n        doRemove(uploadFile);\n    } else {\n      doRemove(uploadFile);\n    }\n  };\n  function submit() {\n    uploadFiles.value.filter(({ status }) => status === \"ready\").forEach(({ raw }) => {\n      var _a;\n      return raw && ((_a = uploadRef.value) == null ? void 0 : _a.upload(raw));\n    });\n  }\n  watch(() => props.listType, (val) => {\n    if (val !== \"picture-card\" && val !== \"picture\") {\n      return;\n    }\n    uploadFiles.value = uploadFiles.value.map((file) => {\n      const { raw, url } = file;\n      if (!url && raw) {\n        try {\n          file.url = URL.createObjectURL(raw);\n        } catch (err) {\n          props.onError(err, file, uploadFiles.value);\n        }\n      }\n      return file;\n    });\n  });\n  watch(uploadFiles, (files) => {\n    for (const file of files) {\n      file.uid || (file.uid = genFileId());\n      file.status || (file.status = \"success\");\n    }\n  }, { immediate: true, deep: true });\n  return {\n    uploadFiles,\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n    revokeFileObjectURL\n  };\n};\n\nexport { useHandlers };\n//# sourceMappingURL=use-handlers.mjs.map\n",
      "start": 1700494467086,
      "end": 1700494467252,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494467252,
      "end": 1700494467252,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494467253,
      "end": 1700494467253,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494467253,
      "end": 1700494467254,
      "order": "normal"
    }
  ]
}
