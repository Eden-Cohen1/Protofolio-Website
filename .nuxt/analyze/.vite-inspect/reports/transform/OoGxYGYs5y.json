{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/tabs/src/tab-pane2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, getCurrentInstance, useSlots, inject, ref, computed, watch, reactive, onMounted, onUnmounted, unref, withDirectives, openBlock, createElementBlock, normalizeClass, renderSlot, vShow, createCommentVNode } from 'vue';\nimport { eagerComputed } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { tabsRootContextKey } from './constants.mjs';\nimport { tabPaneProps } from './tab-pane.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _hoisted_1 = [\"id\", \"aria-hidden\", \"aria-labelledby\"];\nconst COMPONENT_NAME = \"ElTabPane\";\nconst __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: tabPaneProps,\n  setup(__props) {\n    const props = __props;\n    const instance = getCurrentInstance();\n    const slots = useSlots();\n    const tabsRoot = inject(tabsRootContextKey);\n    if (!tabsRoot)\n      throwError(COMPONENT_NAME, \"usage: <el-tabs><el-tab-pane /></el-tabs/>\");\n    const ns = useNamespace(\"tab-pane\");\n    const index = ref();\n    const isClosable = computed(() => props.closable || tabsRoot.props.closable);\n    const active = eagerComputed(() => {\n      var _a;\n      return tabsRoot.currentName.value === ((_a = props.name) != null ? _a : index.value);\n    });\n    const loaded = ref(active.value);\n    const paneName = computed(() => {\n      var _a;\n      return (_a = props.name) != null ? _a : index.value;\n    });\n    const shouldBeRender = eagerComputed(() => !props.lazy || loaded.value || active.value);\n    watch(active, (val) => {\n      if (val)\n        loaded.value = true;\n    });\n    const pane = reactive({\n      uid: instance.uid,\n      slots,\n      props,\n      paneName,\n      active,\n      index,\n      isClosable\n    });\n    onMounted(() => {\n      tabsRoot.registerPane(pane);\n    });\n    onUnmounted(() => {\n      tabsRoot.unregisterPane(pane.uid);\n    });\n    return (_ctx, _cache) => {\n      return unref(shouldBeRender) ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        id: `pane-${unref(paneName)}`,\n        class: normalizeClass(unref(ns).b()),\n        role: \"tabpanel\",\n        \"aria-hidden\": !unref(active),\n        \"aria-labelledby\": `tab-${unref(paneName)}`\n      }, [\n        renderSlot(_ctx.$slots, \"default\")\n      ], 10, _hoisted_1)), [\n        [vShow, unref(active)]\n      ]) : createCommentVNode(\"v-if\", true);\n    };\n  }\n});\nvar TabPane = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tabs/src/tab-pane.vue\"]]);\n\nexport { TabPane as default };\n//# sourceMappingURL=tab-pane2.mjs.map\n",
      "start": 1700494465837,
      "end": 1700494465906,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494465906,
      "end": 1700494465906,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494465907,
      "end": 1700494465907,
      "order": "normal"
    }
  ]
}
