{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/watermark/src/watermark2.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, computed, shallowRef, ref, onMounted, watch, onBeforeUnmount, openBlock, createElementBlock, normalizeStyle, renderSlot } from 'vue';\nimport { useMutationObserver } from '@vueuse/core';\nimport { watermarkProps } from './watermark.mjs';\nimport { getStyleStr, getPixelRatio, reRendering } from './utils.mjs';\nimport useClips, { FontGap } from './useClips.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\n\nconst __default__ = defineComponent({\n  name: \"ElWatermark\"\n});\nconst _sfc_main = /* @__PURE__ */ defineComponent({\n  ...__default__,\n  props: watermarkProps,\n  setup(__props) {\n    const props = __props;\n    const style = {\n      position: \"relative\"\n    };\n    const color = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.color) != null ? _b : \"rgba(0,0,0,.15)\";\n    });\n    const fontSize = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.fontSize) != null ? _b : 16;\n    });\n    const fontWeight = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.fontWeight) != null ? _b : \"normal\";\n    });\n    const fontStyle = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.fontStyle) != null ? _b : \"normal\";\n    });\n    const fontFamily = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.fontFamily) != null ? _b : \"sans-serif\";\n    });\n    const textAlign = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.textAlign) != null ? _b : \"center\";\n    });\n    const textBaseline = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.font) == null ? void 0 : _a.textBaseline) != null ? _b : \"top\";\n    });\n    const gapX = computed(() => props.gap[0]);\n    const gapY = computed(() => props.gap[1]);\n    const gapXCenter = computed(() => gapX.value / 2);\n    const gapYCenter = computed(() => gapY.value / 2);\n    const offsetLeft = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.offset) == null ? void 0 : _a[0]) != null ? _b : gapXCenter.value;\n    });\n    const offsetTop = computed(() => {\n      var _a, _b;\n      return (_b = (_a = props.offset) == null ? void 0 : _a[1]) != null ? _b : gapYCenter.value;\n    });\n    const getMarkStyle = () => {\n      const markStyle = {\n        zIndex: props.zIndex,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n        height: \"100%\",\n        pointerEvents: \"none\",\n        backgroundRepeat: \"repeat\"\n      };\n      let positionLeft = offsetLeft.value - gapXCenter.value;\n      let positionTop = offsetTop.value - gapYCenter.value;\n      if (positionLeft > 0) {\n        markStyle.left = `${positionLeft}px`;\n        markStyle.width = `calc(100% - ${positionLeft}px)`;\n        positionLeft = 0;\n      }\n      if (positionTop > 0) {\n        markStyle.top = `${positionTop}px`;\n        markStyle.height = `calc(100% - ${positionTop}px)`;\n        positionTop = 0;\n      }\n      markStyle.backgroundPosition = `${positionLeft}px ${positionTop}px`;\n      return markStyle;\n    };\n    const containerRef = shallowRef(null);\n    const watermarkRef = shallowRef();\n    const stopObservation = ref(false);\n    const destroyWatermark = () => {\n      if (watermarkRef.value) {\n        watermarkRef.value.remove();\n        watermarkRef.value = void 0;\n      }\n    };\n    const appendWatermark = (base64Url, markWidth) => {\n      var _a;\n      if (containerRef.value && watermarkRef.value) {\n        stopObservation.value = true;\n        watermarkRef.value.setAttribute(\"style\", getStyleStr({\n          ...getMarkStyle(),\n          backgroundImage: `url('${base64Url}')`,\n          backgroundSize: `${Math.floor(markWidth)}px`\n        }));\n        (_a = containerRef.value) == null ? void 0 : _a.append(watermarkRef.value);\n        setTimeout(() => {\n          stopObservation.value = false;\n        });\n      }\n    };\n    const getMarkSize = (ctx) => {\n      let defaultWidth = 120;\n      let defaultHeight = 64;\n      const image = props.image;\n      const content = props.content;\n      const width = props.width;\n      const height = props.height;\n      if (!image && ctx.measureText) {\n        ctx.font = `${Number(fontSize.value)}px ${fontFamily.value}`;\n        const contents = Array.isArray(content) ? content : [content];\n        const sizes = contents.map((item) => {\n          const metrics = ctx.measureText(item);\n          return [\n            metrics.width,\n            metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent\n          ];\n        });\n        defaultWidth = Math.ceil(Math.max(...sizes.map((size) => size[0])));\n        defaultHeight = Math.ceil(Math.max(...sizes.map((size) => size[1]))) * contents.length + (contents.length - 1) * FontGap;\n      }\n      return [width != null ? width : defaultWidth, height != null ? height : defaultHeight];\n    };\n    const getClips = useClips();\n    const renderWatermark = () => {\n      const canvas = document.createElement(\"canvas\");\n      const ctx = canvas.getContext(\"2d\");\n      const image = props.image;\n      const content = props.content;\n      const rotate = props.rotate;\n      if (ctx) {\n        if (!watermarkRef.value) {\n          watermarkRef.value = document.createElement(\"div\");\n        }\n        const ratio = getPixelRatio();\n        const [markWidth, markHeight] = getMarkSize(ctx);\n        const drawCanvas = (drawContent) => {\n          const [textClips, clipWidth] = getClips(drawContent || \"\", rotate, ratio, markWidth, markHeight, {\n            color: color.value,\n            fontSize: fontSize.value,\n            fontStyle: fontStyle.value,\n            fontWeight: fontWeight.value,\n            fontFamily: fontFamily.value,\n            textAlign: textAlign.value,\n            textBaseline: textBaseline.value\n          }, gapX.value, gapY.value);\n          appendWatermark(textClips, clipWidth);\n        };\n        if (image) {\n          const img = new Image();\n          img.onload = () => {\n            drawCanvas(img);\n          };\n          img.onerror = () => {\n            drawCanvas(content);\n          };\n          img.crossOrigin = \"anonymous\";\n          img.referrerPolicy = \"no-referrer\";\n          img.src = image;\n        } else {\n          drawCanvas(content);\n        }\n      }\n    };\n    onMounted(() => {\n      renderWatermark();\n    });\n    watch(() => props, () => {\n      renderWatermark();\n    }, {\n      deep: true,\n      flush: \"post\"\n    });\n    onBeforeUnmount(() => {\n      destroyWatermark();\n    });\n    const onMutate = (mutations) => {\n      if (stopObservation.value) {\n        return;\n      }\n      mutations.forEach((mutation) => {\n        if (reRendering(mutation, watermarkRef.value)) {\n          destroyWatermark();\n          renderWatermark();\n        }\n      });\n    };\n    useMutationObserver(containerRef, onMutate, {\n      attributes: true\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        ref_key: \"containerRef\",\n        ref: containerRef,\n        style: normalizeStyle([style])\n      }, [\n        renderSlot(_ctx.$slots, \"default\")\n      ], 4);\n    };\n  }\n});\nvar Watermark = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/watermark/src/watermark.vue\"]]);\n\nexport { Watermark as default };\n//# sourceMappingURL=watermark2.mjs.map\n",
      "start": 1700494465925,
      "end": 1700494466053,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494466053,
      "end": 1700494466053,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494466054,
      "end": 1700494466054,
      "order": "normal"
    }
  ]
}
