{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/space/src/space.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isVNode, defineComponent, createVNode, renderSlot, createTextVNode } from 'vue';\nimport { isString, isArray } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport SpaceItem from './item.mjs';\nimport { useSpace } from './use-space.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nimport { componentSizes } from '../../../constants/size.mjs';\nimport { isFragment, PatchFlags, isValidElementNode } from '../../../utils/vue/vnode.mjs';\n\nconst spaceProps = buildProps({\n  direction: {\n    type: String,\n    values: [\"horizontal\", \"vertical\"],\n    default: \"horizontal\"\n  },\n  class: {\n    type: definePropType([\n      String,\n      Object,\n      Array\n    ]),\n    default: \"\"\n  },\n  style: {\n    type: definePropType([String, Array, Object]),\n    default: \"\"\n  },\n  alignment: {\n    type: definePropType(String),\n    default: \"center\"\n  },\n  prefixCls: {\n    type: String\n  },\n  spacer: {\n    type: definePropType([Object, String, Number, Array]),\n    default: null,\n    validator: (val) => isVNode(val) || isNumber(val) || isString(val)\n  },\n  wrap: Boolean,\n  fill: Boolean,\n  fillRatio: {\n    type: Number,\n    default: 100\n  },\n  size: {\n    type: [String, Array, Number],\n    values: componentSizes,\n    validator: (val) => {\n      return isNumber(val) || isArray(val) && val.length === 2 && val.every(isNumber);\n    }\n  }\n});\nconst Space = defineComponent({\n  name: \"ElSpace\",\n  props: spaceProps,\n  setup(props, { slots }) {\n    const { classes, containerStyle, itemStyle } = useSpace(props);\n    function extractChildren(children, parentKey = \"\", extractedChildren = []) {\n      const { prefixCls } = props;\n      children.forEach((child, loopKey) => {\n        if (isFragment(child)) {\n          if (isArray(child.children)) {\n            child.children.forEach((nested, key) => {\n              if (isFragment(nested) && isArray(nested.children)) {\n                extractChildren(nested.children, `${parentKey + key}-`, extractedChildren);\n              } else {\n                extractedChildren.push(createVNode(SpaceItem, {\n                  style: itemStyle.value,\n                  prefixCls,\n                  key: `nested-${parentKey + key}`\n                }, {\n                  default: () => [nested]\n                }, PatchFlags.PROPS | PatchFlags.STYLE, [\"style\", \"prefixCls\"]));\n              }\n            });\n          }\n        } else if (isValidElementNode(child)) {\n          extractedChildren.push(createVNode(SpaceItem, {\n            style: itemStyle.value,\n            prefixCls,\n            key: `LoopKey${parentKey + loopKey}`\n          }, {\n            default: () => [child]\n          }, PatchFlags.PROPS | PatchFlags.STYLE, [\"style\", \"prefixCls\"]));\n        }\n      });\n      return extractedChildren;\n    }\n    return () => {\n      var _a;\n      const { spacer, direction } = props;\n      const children = renderSlot(slots, \"default\", { key: 0 }, () => []);\n      if (((_a = children.children) != null ? _a : []).length === 0)\n        return null;\n      if (isArray(children.children)) {\n        let extractedChildren = extractChildren(children.children);\n        if (spacer) {\n          const len = extractedChildren.length - 1;\n          extractedChildren = extractedChildren.reduce((acc, child, idx) => {\n            const children2 = [...acc, child];\n            if (idx !== len) {\n              children2.push(createVNode(\"span\", {\n                style: [\n                  itemStyle.value,\n                  direction === \"vertical\" ? \"width: 100%\" : null\n                ],\n                key: idx\n              }, [\n                isVNode(spacer) ? spacer : createTextVNode(spacer, PatchFlags.TEXT)\n              ], PatchFlags.STYLE));\n            }\n            return children2;\n          }, []);\n        }\n        return createVNode(\"div\", {\n          class: classes.value,\n          style: containerStyle.value\n        }, extractedChildren, PatchFlags.STYLE | PatchFlags.CLASS);\n      }\n      return children.children;\n    };\n  }\n});\n\nexport { Space as default, spaceProps };\n//# sourceMappingURL=space.mjs.map\n",
      "start": 1700406269970,
      "end": 1700406270045,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406270045,
      "end": 1700406270045,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406270045,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406270046,
      "end": 1700406270046,
      "order": "normal"
    }
  ]
}
