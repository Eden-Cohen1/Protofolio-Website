{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "const sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n",
      "start": 1700494467136,
      "end": 1700494467310,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700494467310,
      "end": 1700494467310,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700494467311,
      "end": 1700494467311,
      "order": "normal"
    }
  ]
}
