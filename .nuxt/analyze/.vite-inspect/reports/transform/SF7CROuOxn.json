{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/lodash-es/memoize.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n",
      "start": 1700406274845,
      "end": 1700406274898,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406274898,
      "end": 1700406274898,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700406274898,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700406274899,
      "end": 1700406274899,
      "order": "normal"
    }
  ]
}
