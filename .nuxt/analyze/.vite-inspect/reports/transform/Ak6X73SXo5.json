{
  "resolvedId": "C:/Users/eden7/Protofolio-Website/Protofolio-Website/node_modules/element-plus/es/components/slider/src/slider.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { placements } from '@popperjs/core';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nimport { isNumber } from '../../../utils/types.mjs';\nimport { isArray } from '@vue/shared';\nimport { UPDATE_MODEL_EVENT, INPUT_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\n\nconst sliderProps = buildProps({\n  modelValue: {\n    type: definePropType([Number, Array]),\n    default: 0\n  },\n  id: {\n    type: String,\n    default: void 0\n  },\n  min: {\n    type: Number,\n    default: 0\n  },\n  max: {\n    type: Number,\n    default: 100\n  },\n  step: {\n    type: Number,\n    default: 1\n  },\n  showInput: Boolean,\n  showInputControls: {\n    type: Boolean,\n    default: true\n  },\n  size: useSizeProp,\n  inputSize: useSizeProp,\n  showStops: Boolean,\n  showTooltip: {\n    type: Boolean,\n    default: true\n  },\n  formatTooltip: {\n    type: definePropType(Function),\n    default: void 0\n  },\n  disabled: Boolean,\n  range: Boolean,\n  vertical: Boolean,\n  height: String,\n  debounce: {\n    type: Number,\n    default: 300\n  },\n  label: {\n    type: String,\n    default: void 0\n  },\n  rangeStartLabel: {\n    type: String,\n    default: void 0\n  },\n  rangeEndLabel: {\n    type: String,\n    default: void 0\n  },\n  formatValueText: {\n    type: definePropType(Function),\n    default: void 0\n  },\n  tooltipClass: {\n    type: String,\n    default: void 0\n  },\n  placement: {\n    type: String,\n    values: placements,\n    default: \"top\"\n  },\n  marks: {\n    type: definePropType(Object)\n  },\n  validateEvent: {\n    type: Boolean,\n    default: true\n  }\n});\nconst isValidValue = (value) => isNumber(value) || isArray(value) && value.every(isNumber);\nconst sliderEmits = {\n  [UPDATE_MODEL_EVENT]: isValidValue,\n  [INPUT_EVENT]: isValidValue,\n  [CHANGE_EVENT]: isValidValue\n};\n\nexport { sliderEmits, sliderProps };\n//# sourceMappingURL=slider.mjs.map\n",
      "start": 1700439439449,
      "end": 1700439439510,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1700439439510,
      "end": 1700439439510,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1700439439510,
      "end": 1700439439511,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1700439439511,
      "end": 1700439439511,
      "order": "normal"
    }
  ]
}
