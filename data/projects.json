{
  "academicPulse": {
    "headline": "Academic-Pulse",
    "subHeadline": "A web application created to help students to create and track their academic plan.",
    "description": "I developed the application using Nuxt 3 for the frontend, employed Tailwind for design, utilized Vest for form validation, and added drag-and-drop functionality to enhance user experience. For the server-side, I leveraged Supabase serverless to construct the PostgreSQL database, fetch data for the app, and implemented regular login/registration/password recovery and Google OAuth integration.",
    "tech": [
      "Javascript",
      "Vue.js",
      "Nuxt3",
      "Tailwind",
      "Supabase",
      "PostgreSQL"
    ],
    "img": "academicPulse.png",
    "links": {
      "git": "https://github.com/Eden-Cohen1/Academic-Pulse",
      "youtube": "https://www.loom.com/share/9216755ff61d4584a7b02b38a4677675",
      "website": "https://www.academic-pulse.com/"
    }
  },
  "filmHub": {
    "headline": "FilmHub",
    "subHeadline": "A website designed for movies discovery, from overviews to ratings, trailers, reviews and more.",
    "description": "The frontend was built with Vue, Nuxt3. the backend API was implemented using Nitro, Nuxt's built-in server. For better performance, caching was applied with Nitro's CacheAPI, used Nuxt-Img to minimize image size and lazy-loading to prevent the load of out of sight images. in addition infinity scrolling was implemented for pagination. The data is fetched from a 3rd party API, users can search and sort the movies.",
    "tech": ["Javascript", "Vue.js", "Nuxt3", "Nitro", "HTML", "CSS"],
    "img": "filmHub.png",
    "links": {
      "git": "https://github.com/Eden-Cohen1/FilmHub",
      "youtube": "https://www.loom.com/share/4573dc9316ad4390aa179157aee9d625",
      "website": "https://my-film-hub.netlify.app/"
    }
  },
  "protoWebsite": {
    "headline": "Protofolio Website",
    "subHeadline": "Portfolio landing page, presenting my work.",
    "description": "I utilized the Nuxt Image module for image optimization, implementing SSR to optimize loading speed and SEO performance. Used Nuxt Gtag for google analytics and Netlify for deployment/receiving emails.",
    "tech": ["Javascript", "Vue.js", "Nuxt3", "HTML", "CSS"],
    "img": "protofolio.png",
    "links": {
      "git": "https://github.com/Eden-Cohen1/Protofolio-Website",
      "youtube": false,
      "website": false
    }
  },
  "waveCave": {
    "headline": "Wave Cave",
    "subHeadline": "A social media platform tailored for surfers to share and interact within the community. Additionally, it offers surfing news and wave forecasts through API integrations.",
    "description": "Using Javascript, HTML, CSS for the frontend, Node.js, Express for the backend, MongoDB, Mongoose for data-base and Render for deployment.",
    "tech": ["Javascript", "HTML", "CSS", "Express", "MongoDB"],
    "img": "waveCave.png",
    "links": {
      "git": "https://github.com/Eden-Cohen1/Wave-Cave",
      "youtube": false,
      "website": "https://wave-cave.onrender.com/"
    }
  },
  "shapeShift": {
    "headline": "Shape Shift",
    "subHeadline": "Workout menegment windows application.",
    "description": "As a school project to enhance my understanding of OOP and data management, I developed a .NET Windows Forms app. The UI was constructed using the UserControl Windows Forms logic. Data was stored in a binary file, as objects, incorporating OOP and Polymorphism principles. Serialization occurred on logout, and deserialization on login.",
    "tech": ["C#", ".NET Win-Forms"],
    "img": "shapeShift.jpg",
    "links": {
      "git": "https://github.com/Eden-Cohen1/Workout-Manager",
      "youtube": false,
      "website": false
    }
  }
}
